<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: html5 | Blog like hacke]]></title>
  <link href="http://ztlblog.github.io/blog/categories/html5/atom.xml" rel="self"/>
  <link href="http://ztlblog.github.io/"/>
  <updated>2015-08-12T14:02:42+08:00</updated>
  <id>http://ztlblog.github.io/</id>
  <author>
    <name><![CDATA[ztl]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[webSql之本地存储]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/24/websql/"/>
    <updated>2015-07-24T10:37:04+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/24/websql</id>
    <content type="html"><![CDATA[<p>{% codeblock html %}</p>

<div id='one'></div>


<p>{% endcodeblock %}</p>

<p>{% codeblock js %}
window.onload = function()
{
    var one = document.getElementById(&lsquo;one&rsquo;);
    if(window.openDatabase)
    {
        var dataBase = openDatabase(&lsquo;student&rsquo;,&lsquo;1.0&rsquo;,&lsquo;学生表&rsquo;, 1024*1024,function(){ });;
        dataBase.transaction(function (fx) )
        {
            //创建一张表
            fx.execteSql(
                &ldquo;create table if not exists stu(id REAL UNIQUE, name TEXT)&rdquo;,
                [],
                function ()
                {
                    alert(&lsquo;ok&rsquo;);
                },
                function ()
                {
                    alert(&lsquo;on&rsquo;);
                }
            );</p>

<pre><code>        //插入数据
        fx.executeSql(
            "insert into stu(id,name) values(?,?)",
            [1,'张三'],
            function ()
            {
                alert('ok');
            },
            function ()
            {
                alert('on');
            }
        );

        //更新数据
        fx.executeSql(
            'update stu set name=? where id=?',
            ['李四',1],
            function ()
            {
                alert('ok');
            },
            function ()
            {
                alert('on');                        
            }
        );

        //查询数据
        fx.executeSql(
            'select * from stu',
            [],
            function (fx,result)
            {
                for(var i=0;i&lt;result.rows.length;i++)
                {
                    one.innerHTML+=result.rows.item(i)['name'];
                }
                aler('查询成功');
            },
            function ()
            {
                alert('查询失败');
            }
        );

        //删除数据
        fx.executeSql(
            "delete from stu where id=?",
            [1],
            function ()
            {
                alert('yes');
            },
            function()
            {
                alert('no);
            }
        );

        //删除表
        fx.executeSql(
            "drop table stu",
            [],
            function ()
            {
                alert('删除表成功');
            },
            function ()
            {
                alert('删除表失败);
            }
        );

    }
}
</code></pre>

<p>}
{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sessionstorage之本地存储]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/24/sessionstorage/"/>
    <updated>2015-07-24T10:37:04+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/24/sessionstorage</id>
    <content type="html"><![CDATA[<p><strong>sessionStroage生命周期为当前窗口或标签页，一旦窗口或标签页被关闭，那么所有通过sessionStorage存储的数据也就被清空了</strong></p>

<p>{% codeblock html %}
&lt;!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Storage</title>
</head>
<body >
    用户名：<input type='text' name='username' id='username' /><br>
    密 码：<input type='password' name='password' id='password' /></br>
    记住密码：<input type='checkbox' name='save' id='save'>
</body>
</html>
{% endcodeblock %}</p>

<p>{% codeblock js %}
var username = document.getElementById(&lsquo;username&rsquo;);
var password = document.getElementById(&lsquo;password&rsquo;);
var save     = document.getElementById(&lsquo;save&rsquo;);</p>

<p>if(sessionStorage.getItem(&lsquo;username&rsquo;) &amp;&amp; sessionStorage.getItem(&lsquo;password&rsquo;))
{
    username.value = sessionStorage.getItem(&lsquo;username&rsquo;);
    password.value = sessionStorage.getItem(&lsquo;password&rsquo;);
}</p>

<p>save.onclick = function()
{
    if(save.checked)
    {
        sessionStorage.username = username.value;
        sessionStorage.password = password.value;
    }else
    {
        sessionStorage.removeItem(&lsquo;username&rsquo;);
        sessionStorage.removeItem(&lsquo;password&rsquo;);
    }
}</p>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[localstorage之本地存储]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/24/localstorage/"/>
    <updated>2015-07-24T10:37:04+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/24/localstorage</id>
    <content type="html"><![CDATA[<p><strong>localStroage生命周期是永久，这意味着除非用户清除localStorage信息,否则这些信息将永久存在</strong></p>

<p>{% codeblock html %}
&lt;!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Storage</title>
</head>
<body >
    用户名：<input type='text' name='username' id='username' /><br>
    密 码：<input type='password' name='password' id='password' /></br>
    记住密码：<input type='checkbox' name='save' id='save'>
</body>
</html>
{% endcodeblock %}</p>

<p>{% codeblock js %}
var username = document.getElementById(&lsquo;username);
var password = document.getElementById('password&rsquo;);</p>

<p>if(localStorage.getItem(&lsquo;username&rsquo;) &amp;&amp; localStorgage.getItem(&lsquo;password&rsquo;))
{
    username.value = localStorage.getItem(&lsquo;username&rsquo;);
    password.value = localStorage.getItem(&lsquo;password&rsquo;);
    save.checked = true;
}</p>

<p>save.onclick = function()
{
    if(save.checked)
    {
        localStorage.setItem(&lsquo;username&rsquo;,username.value);
        //localhost.username = username.value;
        localStorage.setItem(&lsquo;password&rsquo;,password.value);
        //localStorage.password = password.value;
    }else
    {
        localStorage.removeItem(&lsquo;username&rsquo;);
        localstorage.removeItem(&lsquo;password&rsquo;);
    }
}
{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[html5之消息提醒]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/22/html5001/"/>
    <updated>2015-07-22T17:28:55+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/22/html5001</id>
    <content type="html"><![CDATA[<p>{% codeblock html %}
&lt;!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>本地提醒</title>
    <script type="text/javascript" src="main.js"></script>
</head>
<body>
    <button onclick="NotificationHandler.showNotification()">show notification</button>
</body>
</html>
{% endcodeblock %}</p>

<p>{% codeblock js %}
var NotificationHandler = {
    isNotificationSupported: &lsquo;Notification&rsquo; in window,
    isPermissionGranted: function() {
        return Notification.permission === &lsquo;granted&rsquo;;
    },
    requestPermission: function() {
        if (!this.isNotificationSupported) {
            console.log(&lsquo;the current browser does not support Notification API&rsquo;);
            return;
        }</p>

<pre><code>    Notification.requestPermission(function(status) {
        //status是授权状态，如果用户允许显示桌面通知，则status为'granted'
        console.log('status: ' + status);

        //permission只读属性
        var permission = Notification.permission;
        //default 用户没有接收或拒绝授权 不能显示通知
        //granted 用户接受授权 允许显示通知
        //denied  用户拒绝授权 不允许显示通知

        console.log('permission: ' + permission);
    });
},
showNotification: function() {
    if (!this.isNotificationSupported) {
        console.log('the current browser does not support Notification API');
        return;
    }
    if (!this.isPermissionGranted()) {
        console.log('the current page has not been granted for notification');
        return;
    }

    var n = new Notification("sir, you got a message", {
        icon: 'img/icon.png',
        body: 'you will have a meeting 5 minutes later.'
    });

    //onshow函数在消息框显示时会被调用
    //可以做一些数据记录及定时操作等
    n.onshow = function() {
        console.log('notification shows up');
        //5秒后关闭消息框
        setTimeout(function() {
            n.close();
        }, 5000);
    };

    //消息框被点击时被调用
    //可以打开相关的视图，同时关闭该消息框等操作
    n.onclick = function() {
        alert('open the associated view');
        //opening the view...
        n.close();
    };

    //当有错误发生时会onerror函数会被调用
    //如果没有granted授权，创建Notification对象实例时，也会执行onerror函数
    n.onerror = function() {
        console.log('notification encounters an error');
        //do something useful
    };

    //一个消息框关闭时onclose函数会被调用
    n.onclose = function() {
        console.log('notification is closed');
        //do something useful
    };
}
</code></pre>

<p>};</p>

<p>document.addEventListener(&lsquo;load&rsquo;, function() {
    //try to request permission when page has been loaded.
    NotificationHandler.requestPermission();
});</p>

<p>setTimeout(function() {<br/>
    //if there has new mail, show notification<br/>
    NotificationHandler.showNotification();<br/>
}, 5000);
{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用H5上传图片]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/21/html5/"/>
    <updated>2015-07-21T16:48:42+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/21/html5</id>
    <content type="html"><![CDATA[<p><strong>主要用到的知识点</strong>
    fileAPI  FormData</p>

<p>{% codeblock html %}
&lt;!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>图片上传</title>
    <script type="text/javascript" src='jquery-1.7.2.min.js'></script>
</head>
<body>
    <form id='form1'>
        用户名：<input type='text' name='username' /></br>
        用户头像：<input type='file' name='pic' id='pic' onchange='send();'></br>
        <input type='button' id='but1' value='提交'>
    </form>
    <div>
        <img id='imgs' widht='50' height='50' />
    </div>
</body></p>

<script type="text/javascript">
function send()
{
     var pic = document.getElementById('pic');

     if (window.navigator.userAgent.indexOf("Chrome") >= 1 || window.navigator.userAgent.indexOf("Safari") >= 1) 
     {
        var src = window.webkitURL.createObjectURL(pic.files[0]);
     }
     else 
     {
        var src = window.URL.createObjectURL(pic.files[0]);
     }
     $("#imgs").attr({src: src});
}

$("#but1").click(function(){
    var fd = new FormData($('#form1'));
    $.ajax({ 
            url: 'from.php',  
            type: 'POST',  
            data: fd,  
            dataType: 'JSON',
            cache: false,  
            processData: false,  
            contentType: false  
        }).done(function(ret){  
            console.log(ret);
    }); 
});
</script>


<p></html>
{% endcodeblock %}</p>

<p>{% codeblock php %}
//获取图片进行处理
print_r($<em>FILES);
//获取其他数据进行处理
print_r($</em>POST);
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
