<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: other | Blog like hacke]]></title>
  <link href="http://ztlblog.github.io/blog/categories/other/atom.xml" rel="self"/>
  <link href="http://ztlblog.github.io/"/>
  <updated>2015-08-12T14:02:42+08:00</updated>
  <id>http://ztlblog.github.io/</id>
  <author>
    <name><![CDATA[ztl]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用php实现守护进程]]></title>
    <link href="http://ztlblog.github.io/blog/2015/08/11/other/"/>
    <updated>2015-08-11T14:43:29+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/08/11/other</id>
    <content type="html"><![CDATA[<h3>消息队列处理后台任务带来的问题</h3>

<ol>
<li>消息队列只能存储字符串类型的数据，如何将一个发送邮件这样的任务，转换为消息队列中的一个消息</li>
<li>消息队列只负责数据的存放与进出，本身不能执行任何程序，那么我们要如何从消息队列中一个一个取出数据，在将这些数据转换成任务并执行</li>
<li>我们无法预知消息队列何时会有数据产生，所以我们的任务执行程序还需要具备监控消息队列的能力，也就是常驻后台的守护进程</li>
<li>一般的web应用php都以cgi方式运行，无法常驻内存。</li>
<li>当守护进程运行时，web应用能否与后台守护进程交互，实现开启/杀死进程的功能以及获得进程的运行状态</li>
</ol>


<h3>php-resque的安装</h3>

<pre><code>由于涉及到进程的开辟与管理，php-resque使用了php的pcntl函数，所以只能在linux下运行，并且需要php编译pcntl函数
</code></pre>

<h3>将job插入队列</h3>

<pre><code>if(empty($argv[1]))
{
    die('aa');
}

require __DIR__.'/init.php';
date_default_timezone_set('GMT');
Resque::setBackend('127.0.0.1:6379');

$args = array(
    'time' =&gt; time(),
    'array'=&gt;array(
        'test' =&gt; 'test'
    )
);

$jobId = Resque::enqueue('default',$argv[1],true);
echo $jobId;
</code></pre>

<h4>在这个列子中，queue.php需要以cli方式运行，将cli接受到的第一参数作为job名称，插入名'default'</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[memcache之老数据被踢现象]]></title>
    <link href="http://ztlblog.github.io/blog/2015/08/07/other/"/>
    <updated>2015-08-07T15:23:22+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/08/07/other</id>
    <content type="html"><![CDATA[<p><em>大家都知道memcahed的lru淘汰算法，他是在slab内部进行的，如果所有空间都被slabs分配，即使另一个slab里面有空位，仍然存在踢数据的可能</em></p>

<p><strong>总结</strong></p>

<pre><code>1. 过期的数据如果没被显示调用get，则也要占用空间
2. 过期的不要和不过期的数据存在一起，否则不过期的可能被踢
3. 从节省内存的角度考虑，即使数据会过期，也不要轻易使用随机数字符串作为key，尽量使用定值
4. 估算空间大小时候请使用slab size计算
5. 不要把cache当作更快的key value store 来用，cache不是storage
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php免费获取手机号归属地]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/28/other/"/>
    <updated>2015-07-28T16:45:11+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/28/other</id>
    <content type="html"><![CDATA[<h2>一.淘宝API</h2>

<p>{% codeblock API介绍 %}
地址： <a href="http://tcc.taobao.com/cc/json/mobile_tel_segment.htm?tel=15850781443">http://tcc.taobao.com/cc/json/mobile_tel_segment.htm?tel=15850781443</a>
tel：手机号
返回：json
{% endcodeblock %}</p>

<p>{% codeblock API实例 %}
$mobile = &ldquo;1510032586&rdquo;;  //要查询的电话号码
$content = get_mobile_area($mobile);
print_r($content);</p>

<p>function get_mobile_area($mobile){
    $sms = array(&lsquo;province&rsquo;=>&lsquo;&rsquo;, &lsquo;supplier&rsquo;=>&lsquo;&rsquo;);    //初始化变量
    //根据淘宝的数据库调用返回值
    $url = &ldquo;<a href="http://tcc.taobao.com/cc/json/mobile_tel_segment.htm?tel=">http://tcc.taobao.com/cc/json/mobile_tel_segment.htm?tel=</a>&rdquo;.$mobile.&ldquo;&amp;t=&rdquo;.time();</p>

<pre><code>$content = file_get_contents($url);
$sms['province'] = substr($content, "56", "4");  //截取字符串
$sms['supplier'] = substr($content, "81", "4");
return $sms;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h2>二.拍拍API</h2>

<p>{% codeblock API介绍 %}
地址：<a href="http://virtual.paipai.com/extinfo/GetMobileProductInfo?mobile=15850781443&amp;amount=10000&amp;callname=getPhoneNumInfoExtCallback">http://virtual.paipai.com/extinfo/GetMobileProductInfo?mobile=15850781443&amp;amount=10000&amp;callname=getPhoneNumInfoExtCallback</a>
mobile：手机号
callname：回调函数
amount：
返回：json
{% endcodeblock %}</p>

<h2>三.财付通API</h2>

<p>{% codeblock APT介绍 %}
地址：<a href="http://life.tenpay.com/cgi-bin/mobile/MobileQueryAttribution.cgi?chgmobile=15850781443">http://life.tenpay.com/cgi-bin/mobile/MobileQueryAttribution.cgi?chgmobile=15850781443</a>
chgmobile：手机号
返回：xml
{% endcodeblock %}</p>

<h2>四.百付宝API</h2>

<p>{% codeblock API介绍 %}
地址：<a href="https://www.baifubao.com/callback?cmd=1059&amp;callback=phone&amp;phone=15850781443">https://www.baifubao.com/callback?cmd=1059&amp;callback=phone&amp;phone=15850781443</a>
phone：手机号
callback：回调函数
cmd：
返回：json
{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[h5的兼容问题]]></title>
    <link href="http://ztlblog.github.io/blog/2015/06/19/other001/"/>
    <updated>2015-06-19T17:14:30+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/06/19/other001</id>
    <content type="html"><![CDATA[<h2>h5 下面placeholder 在IE8中不支持，本来想不写js的，唉&hellip; 万恶的IE啊！！！</h2>

<p>{% codeblock %}
if( !(&lsquo;placeholder&rsquo; in document.createElement(&lsquo;input&rsquo;)) ){ <br/>
    $(&lsquo;input[placeholder],textarea[placeholder]&rsquo;).each(function(){  <br/>
      var that = $(this),  <br/>
      text= that.attr(&lsquo;placeholder&rsquo;);  <br/>
      if(that.val()===&ldquo;&rdquo;){  <br/>
        that.val(text).addClass(&lsquo;placeholder&rsquo;);  <br/>
      }  <br/>
      that.focus(function(){  <br/>
        if(that.val()===text){  <br/>
          that.val(&ldquo;&rdquo;).removeClass(&lsquo;placeholder&rsquo;);  <br/>
        }  <br/>
      })  <br/>
      .blur(function(){  <br/>
        if(that.val()===&ldquo;&rdquo;){  <br/>
          that.val(text).addClass(&lsquo;placeholder&rsquo;);  <br/>
        }  <br/>
      })     <br/>
    });  <br/>
}
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
