<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Blog like hacke]]></title>
  <link href="http://ztlblog.github.io/atom.xml" rel="self"/>
  <link href="http://ztlblog.github.io/"/>
  <updated>2015-08-10T14:37:31+08:00</updated>
  <id>http://ztlblog.github.io/</id>
  <author>
    <name><![CDATA[ztl]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[redis之安装]]></title>
    <link href="http://ztlblog.github.io/blog/2015/08/10/linux/"/>
    <updated>2015-08-10T14:24:53+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/08/10/linux</id>
    <content type="html"><![CDATA[<p><a href="http://download.redis.io/releases/redis-3.0.3.tar.gz" title="redis源码下载">redis linux下载</a></p>

<p><a href="https://github.com/dmajkic/redis/downloads" title="win 下载">redis windows下载</a></p>

<figure class='code'><figcaption><span>linux安装、启动 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /usr/local/src/redis-3.0.3
</span><span class='line'>不用 ./configure 
</span><span class='line'>make 
</span><span class='line'>make PREFIX=/user/local/redis install
</span><span class='line'>
</span><span class='line'>cd /usr/local/redis/
</span><span class='line'>cp /usr/local/src/redis-3.0.3/redis.conf ./
</span><span class='line'>./bin/redis-server redis.conf  （开启服务）
</span><span class='line'>./bin/redis-cli [-h localhost -p 6379]  (客户端使用)</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>win安装、启动 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>和其他软件一样直接安装即可
</span><span class='line'>cmd打开终端
</span><span class='line'>cd 到你安装的目录
</span><span class='line'>redis-server.exe redis.conf
</span><span class='line'>
</span><span class='line'>在打开一个终端
</span><span class='line'>redis-cli.exe -h 127.0.0.1 -p 6379</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[memcache之老数据被踢现象]]></title>
    <link href="http://ztlblog.github.io/blog/2015/08/07/other/"/>
    <updated>2015-08-07T15:23:22+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/08/07/other</id>
    <content type="html"><![CDATA[<p><em>大家都知道memcahed的lru淘汰算法，他是在slab内部进行的，如果所有空间都被slabs分配，即使另一个slab里面有空位，仍然存在踢数据的可能</em></p>

<p><strong>总结</strong></p>

<pre><code>1. 过期的数据如果没被显示调用get，则也要占用空间
2. 过期的不要和不过期的数据存在一起，否则不过期的可能被踢
3. 从节省内存的角度考虑，即使数据会过期，也不要轻易使用随机数字符串作为key，尽量使用定值
4. 估算空间大小时候请使用slab size计算
5. 不要把cache当作更快的key value store 来用，cache不是storage
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux之proxy和upstream]]></title>
    <link href="http://ztlblog.github.io/blog/2015/08/06/linux/"/>
    <updated>2015-08-06T13:43:13+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/08/06/linux</id>
    <content type="html"><![CDATA[<h3>下面是简单的方向代理与负载均衡的使用</h3>

<pre><code>http {
    upstream servers{
        server 192.168.5.147:81;
        server 192.168.5.147:82;
    }   

    server {
        listen 80;
        location / {
            proxy_pass http://servers;
        }
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php之安全]]></title>
    <link href="http://ztlblog.github.io/blog/2015/08/05/php/"/>
    <updated>2015-08-05T13:47:32+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/08/05/php</id>
    <content type="html"><![CDATA[<h3>xss攻击</h3>

<pre><code>1. cookie劫持 
    解决方法：设置cookie为httponly（setcookie(name,value,3600,'\',null,true)）
2. 输入非法字符
    1.写程序过滤非法字符
    2.htmlspacecod 把输入的字符变成实体标签
</code></pre>

<h3>csrf攻击</h3>

<pre><code>主要是跨站请求攻击（get  post）
解决办法：
1. 验证码
2. referer来路判断
3. token值判断
</code></pre>

<h3>sql注入</h3>

<pre><code>**案例1：**
select * from user where name='zhangsan' and password='123456';
**攻击1：**
select * from user where name='zhangsan'--' and password='123456'
**攻击2：**
select * form user where name='' ;drop table user;--' and password='123456';
**案例2：**
select * from action where sorce&lt;60 and talbe like '%youyiku%';
**攻击1：**
select * form action where sorce&lt;60 and talbe like '%' or 1=1'%';

**防护sql注入**
1. 过滤非法字符（有点难 不靠谱）
2. 转义非法字符 (addslashes)
3. 使用pdo思想 (在sql语句中使用占位符)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编译php并与Nginx整合]]></title>
    <link href="http://ztlblog.github.io/blog/2015/08/04/linux/"/>
    <updated>2015-08-04T15:32:59+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/08/04/linux</id>
    <content type="html"><![CDATA[<h4>编译安装php</h4>

<pre><code>1. 下载php  http://cn2.php.net/get/php-5.6.11.tar.bz2/from/this/mirror
2. 解压php  tar xvf php-5.6.11.tar.bz2
3. cd php-5.6.11.tar.bz2
4. ./configure --prefix=/usr/local/php \
    --with-mysql=mysqlnd \
    --enable-mysqlnd \
    --with-gd \
    --enable-gd-native-ttf \
    --enable-gd-jis-conv \
    --enable-fpm
5. make &amp;&amp; make install
</code></pre>

<h4>整合Nginx</h4>

<pre><code>1. cd /usr/local/php
2. cp /usr/local/src/php-5.6.11/php.ini-development  ./lib/php.ini
3. cp ./etc/php-fpm.conf.default  etc/php-fpm.conf
4. ./sbin/php-fpm  开启php
5. 修改Nginx配置
6. locationi ~\.php$ {
        root html;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php
        #fastcgi_param SCRIPT_FILENAME /usr/local/nginx/html$fastcgi_script_name;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include   fastcgi_params;
    }
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx切割日志]]></title>
    <link href="http://ztlblog.github.io/blog/2015/08/03/linux/"/>
    <updated>2015-08-03T11:43:05+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/08/03/linux</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>简单的日志切割 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!bin/bash
</span><span class='line'>
</span><span class='line'>LOCALPATH=/usr/local/nginx/logs/access.log
</span><span class='line'>BASHPATH=/data
</span><span class='line'>
</span><span class='line'>back=$LOCALPATH.$(date -d yesterday +%Y%m%d).zcom.access.log
</span><span class='line'>
</span><span class='line'>mv $LOCALPATH $bakc
</span><span class='line'>
</span><span class='line'>kill -USR1 $(cat /usr/local/nginx/logs/nginx.pid)</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[coreseek安装及使用]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/31/linux/"/>
    <updated>2015-07-31T14:38:14+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/31/linux</id>
    <content type="html"><![CDATA[<p><strong>下载coreseek</strong></p>

<pre><code>http://www.coreseek.cn/uploads/csft/3.2/coreseek-3.2.14.tar.gz
</code></pre>

<p><strong>安装mmseg</strong></p>

<pre><code>cd mmseg-3.2.14
./configure --prefix=/usr/local/mmseg3
make &amp;&amp; make install
</code></pre>

<p><strong>可能出错</strong></p>

<pre><code>aclocal
libtoolize --force
automake --add-missing
autoconf
autoheader
make clean
./configure --prefix=/usr/local/mmseg3
make &amp;&amp; make install
</code></pre>

<p><strong>安装csft</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd csft-3.2.14
</span><span class='line'>./configure --prefix=/usr/local/csft --without-unixodbc --with-mmseg --with-mmseg-includes=/usr/local/coreseek/include/mmseg/ --with-mmseg-libs=/usr/local/coreseek/lib/ --with-mysql
</span><span class='line'>
</span><span class='line'>make && make install</span></code></pre></td></tr></table></div></figure>


<p><strong>测试mmseg分词</strong></p>

<pre><code>cd testpack
cat var /test/test.xml
/usr/lcoal/mmseg3/bin/mmseg -d /usr/local/mmseg3/etc var/test/test.xml
/usr/local/csft/bin/indexer -c etc/csft.conf --all
/usr/local/csft/bin/search -c etc/csft.conf  网络搜索
</code></pre>

<p><strong>安装php扩展</strong></p>

<pre><code>/usr/local/src/coreseek-3.2.14/testpack/api/libsphinxclient
./configure 

下载php扩展 （http://pecl.php.net/get/sphinx-1.3.3.tgz）
cd  /usr/local/src/sphinx-1.3.3
执行 phpize

./configure --with-php-config=/usr/bin/php-config  --with-sphinx
</code></pre>

<p><strong>创建一个sphinx.conf文件</strong></p>

<pre><code>source src1
{
    type= mysql

    sql_host= localhost
    sql_user= yejianfeng
    sql_pass= test
    sql_db  = mysite
    sql_port= 3306  # optional, default is 3306

    sql_query_pre   = SET NAMES utf8
    sql_query_pre   = SET SESSION query_cache_type=OFF

    sql_query   = select id, id AS id_new,name, name AS name_query,descr, descr AS descr_query,city FROM account
    sql_attr_string = name
    sql_attr_string = descr

    sql_query_info  = SELECT * FROM account WHERE id=$id
}

source src1throttled : src1
{
    sql_ranged_throttle = 100
}

index test1
{
    source  = src1
    path= /home/yejianfeng/instance/coreseek/var/data/test1
    docinfo = extern
    mlock   = 0
    morphology  = none
    min_word_len= 1
    charset_type = zh_cn.utf-8
    charset_dictpath  = /home/yejianfeng/instance/mmseg/etc/
    html_strip  = 0
}



indexer
{
    mem_limit   = 256M
}

searchd
{
    listen  = 9312
    listen  = 9306:mysql41

    log = /home/yejianfeng/instance/coreseek/var/log/searchd.log
    query_log   = /home/yejianfeng/instance/coreseek/var/log/query.log
    read_timeout= 5
    client_timeout  = 300
    max_children= 30
    pid_file= /home/yejianfeng/instance/coreseek/var/log/searchd.pid
    max_matches = 1000
    seamless_rotate = 1
    preopen_indexes = 1
    unlink_old  = 1
    mva_updates_pool= 1M
    max_packet_size = 8M
    max_filters = 256
    max_filter_values   = 4096
}
</code></pre>

<p><strong>php使用</strong></p>

<pre><code>$s = new SphinxClient;
$s-&gt;setServer("localhost", 9312);
$s-&gt;setArrayResult(true);
$s-&gt;setSelect();
$s-&gt;setMatchMode(SPH_MATCH_ALL);

$result = $s-&gt;query('美女', 'test1');
print_r($result);
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php免费获取手机号归属地]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/28/other/"/>
    <updated>2015-07-28T16:45:11+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/28/other</id>
    <content type="html"><![CDATA[<h2>一.淘宝API</h2>

<figure class='code'><figcaption><span>API介绍 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>地址： http://tcc.taobao.com/cc/json/mobile_tel_segment.htm?tel=15850781443
</span><span class='line'>tel：手机号
</span><span class='line'>返回：json</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>API实例 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$mobile = "1510032586";  //要查询的电话号码
</span><span class='line'>$content = get_mobile_area($mobile);
</span><span class='line'>print_r($content);
</span><span class='line'>
</span><span class='line'>function get_mobile_area($mobile){
</span><span class='line'>    $sms = array('province'=>'', 'supplier'=>'');    //初始化变量
</span><span class='line'>    //根据淘宝的数据库调用返回值
</span><span class='line'>    $url = "http://tcc.taobao.com/cc/json/mobile_tel_segment.htm?tel=".$mobile."&t=".time();
</span><span class='line'>
</span><span class='line'>    $content = file_get_contents($url);
</span><span class='line'>    $sms['province'] = substr($content, "56", "4");  //截取字符串
</span><span class='line'>    $sms['supplier'] = substr($content, "81", "4");
</span><span class='line'>    return $sms;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>二.拍拍API</h2>

<figure class='code'><figcaption><span>API介绍 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>地址：http://virtual.paipai.com/extinfo/GetMobileProductInfo?mobile=15850781443&amount=10000&callname=getPhoneNumInfoExtCallback
</span><span class='line'>mobile：手机号
</span><span class='line'>callname：回调函数
</span><span class='line'>amount：
</span><span class='line'>返回：json</span></code></pre></td></tr></table></div></figure>


<h2>三.财付通API</h2>

<figure class='code'><figcaption><span>APT介绍 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>地址：http://life.tenpay.com/cgi-bin/mobile/MobileQueryAttribution.cgi?chgmobile=15850781443 
</span><span class='line'>chgmobile：手机号
</span><span class='line'>返回：xml</span></code></pre></td></tr></table></div></figure>


<h2>四.百付宝API</h2>

<figure class='code'><figcaption><span>API介绍 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>地址：https://www.baifubao.com/callback?cmd=1059&callback=phone&phone=15850781443 
</span><span class='line'>phone：手机号
</span><span class='line'>callback：回调函数
</span><span class='line'>cmd：
</span><span class='line'>返回：json</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux之samba]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/27/linux004/"/>
    <updated>2015-07-27T14:58:54+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/27/linux004</id>
    <content type="html"><![CDATA[<h2>关闭iptables</h2>

<pre><code>vim /etc/sysconfig/network-scripts/ifcfg-eth0
如何没有DNS  可以加上DNS=8.8.8.8

vim /etc/selinux/config
SELINUX=disabled

iptables -F
</code></pre>

<h2>下载samba</h2>

<pre><code>yum -y install samba
vim /etc/samba/smb.conf

security = user  //用户需要登录
sercurity = share  //用户不需要登录

可以这样添加目录
[tmp]
path=/tmp   //路径
writable=yes  //可以写
public=yes  //可以使用 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux之ssh]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/27/linux003/"/>
    <updated>2015-07-27T10:21:15+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/27/linux003</id>
    <content type="html"><![CDATA[<h3>ssh服务</h3>

<p><strong>安装ssh服务</strong></p>

<pre><code>yum -y install openssh-server
</code></pre>

<p><strong>检测是否开启</strong></p>

<pre><code>ps -e | grep ssh
</code></pre>

<p><strong>手动开启</strong></p>

<pre><code>/etc/init.d/ssh start
</code></pre>

<h3>scp远程复制</h3>

<p><strong>对拷文件夹（包括文件本身）</strong></p>

<pre><code>scp -r /home/www/charts/util root@192.168.1.65:/temp
</code></pre>

<p><strong>对拷文件夹下所有文件（不包括文件夹本身）</strong></p>

<pre><code>scp /home/www/charts/util/* root@192.168.1.65"/temp
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[webSql之本地存储]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/24/websql/"/>
    <updated>2015-07-24T10:37:04+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/24/websql</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;div id='one'>&lt;/div></span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>window.onload = function()
</span><span class='line'>{
</span><span class='line'>  var one = document.getElementById('one');
</span><span class='line'>  if(window.openDatabase)
</span><span class='line'>  {
</span><span class='line'>      var dataBase = openDatabase('student','1.0','学生表', 1024*1024,function(){ });;
</span><span class='line'>      dataBase.transaction(function (fx) )
</span><span class='line'>      {
</span><span class='line'>          //创建一张表
</span><span class='line'>          fx.execteSql(
</span><span class='line'>              "create table if not exists stu(id REAL UNIQUE, name TEXT)",
</span><span class='line'>              [],
</span><span class='line'>              function ()
</span><span class='line'>              {
</span><span class='line'>                  alert('ok');
</span><span class='line'>              },
</span><span class='line'>              function ()
</span><span class='line'>              {
</span><span class='line'>                  alert('on');
</span><span class='line'>              }
</span><span class='line'>          );
</span><span class='line'>          
</span><span class='line'>          //插入数据
</span><span class='line'>          fx.executeSql(
</span><span class='line'>              "insert into stu(id,name) values(?,?)",
</span><span class='line'>              [1,'张三'],
</span><span class='line'>              function ()
</span><span class='line'>              {
</span><span class='line'>                  alert('ok');
</span><span class='line'>              },
</span><span class='line'>              function ()
</span><span class='line'>              {
</span><span class='line'>                  alert('on');
</span><span class='line'>              }
</span><span class='line'>          );
</span><span class='line'>
</span><span class='line'>          //更新数据
</span><span class='line'>          fx.executeSql(
</span><span class='line'>              'update stu set name=? where id=?',
</span><span class='line'>              ['李四',1],
</span><span class='line'>              function ()
</span><span class='line'>              {
</span><span class='line'>                  alert('ok');
</span><span class='line'>              },
</span><span class='line'>              function ()
</span><span class='line'>              {
</span><span class='line'>                  alert('on');                        
</span><span class='line'>              }
</span><span class='line'>          );
</span><span class='line'>
</span><span class='line'>          //查询数据
</span><span class='line'>          fx.executeSql(
</span><span class='line'>              'select * from stu',
</span><span class='line'>              [],
</span><span class='line'>              function (fx,result)
</span><span class='line'>              {
</span><span class='line'>                  for(var i=0;i&lt;result.rows.length;i++)
</span><span class='line'>                  {
</span><span class='line'>                      one.innerHTML+=result.rows.item(i)['name'];
</span><span class='line'>                  }
</span><span class='line'>                  aler('查询成功');
</span><span class='line'>              },
</span><span class='line'>              function ()
</span><span class='line'>              {
</span><span class='line'>                  alert('查询失败');
</span><span class='line'>              }
</span><span class='line'>          );
</span><span class='line'>          
</span><span class='line'>          //删除数据
</span><span class='line'>          fx.executeSql(
</span><span class='line'>              "delete from stu where id=?",
</span><span class='line'>              [1],
</span><span class='line'>              function ()
</span><span class='line'>              {
</span><span class='line'>                  alert('yes');
</span><span class='line'>              },
</span><span class='line'>              function()
</span><span class='line'>              {
</span><span class='line'>                  alert('no);
</span><span class='line'>              }
</span><span class='line'>          );
</span><span class='line'>
</span><span class='line'>          //删除表
</span><span class='line'>          fx.executeSql(
</span><span class='line'>              "drop table stu",
</span><span class='line'>              [],
</span><span class='line'>              function ()
</span><span class='line'>              {
</span><span class='line'>                  alert('删除表成功');
</span><span class='line'>              },
</span><span class='line'>              function ()
</span><span class='line'>              {
</span><span class='line'>                  alert('删除表失败);
</span><span class='line'>              }
</span><span class='line'>          );
</span><span class='line'>              
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sessionstorage之本地存储]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/24/sessionstorage/"/>
    <updated>2015-07-24T10:37:04+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/24/sessionstorage</id>
    <content type="html"><![CDATA[<p><strong>sessionStroage生命周期为当前窗口或标签页，一旦窗口或标签页被关闭，那么所有通过sessionStorage存储的数据也就被清空了</strong></p>

<figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE html>
</span><span class='line'>&lt;html lang="en">
</span><span class='line'>&lt;head>
</span><span class='line'>  &lt;meta charset="UTF-8">
</span><span class='line'>  &lt;title>Storage&lt;/title>
</span><span class='line'>&lt;/head>
</span><span class='line'>&lt;body >
</span><span class='line'>  用户名：&lt;input type='text' name='username' id='username' />&lt;br>
</span><span class='line'>  密 码：&lt;input type='password' name='password' id='password' />&lt;/br>
</span><span class='line'>  记住密码：&lt;input type='checkbox' name='save' id='save'>
</span><span class='line'>&lt;/body>
</span><span class='line'>&lt;/html></span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var username = document.getElementById('username');
</span><span class='line'>var password = document.getElementById('password');
</span><span class='line'>var save     = document.getElementById('save');
</span><span class='line'>
</span><span class='line'>if(sessionStorage.getItem('username') && sessionStorage.getItem('password'))
</span><span class='line'>{
</span><span class='line'>  username.value = sessionStorage.getItem('username');
</span><span class='line'>  password.value = sessionStorage.getItem('password');
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>save.onclick = function()
</span><span class='line'>{
</span><span class='line'>  if(save.checked)
</span><span class='line'>  {
</span><span class='line'>      sessionStorage.username = username.value;
</span><span class='line'>      sessionStorage.password = password.value;
</span><span class='line'>  }else
</span><span class='line'>  {
</span><span class='line'>      sessionStorage.removeItem('username');
</span><span class='line'>      sessionStorage.removeItem('password');
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[localstorage之本地存储]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/24/localstorage/"/>
    <updated>2015-07-24T10:37:04+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/24/localstorage</id>
    <content type="html"><![CDATA[<p><strong>localStroage生命周期是永久，这意味着除非用户清除localStorage信息,否则这些信息将永久存在</strong></p>

<figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE html>
</span><span class='line'>&lt;html lang="en">
</span><span class='line'>&lt;head>
</span><span class='line'>  &lt;meta charset="UTF-8">
</span><span class='line'>  &lt;title>Storage&lt;/title>
</span><span class='line'>&lt;/head>
</span><span class='line'>&lt;body >
</span><span class='line'>  用户名：&lt;input type='text' name='username' id='username' />&lt;br>
</span><span class='line'>  密 码：&lt;input type='password' name='password' id='password' />&lt;/br>
</span><span class='line'>  记住密码：&lt;input type='checkbox' name='save' id='save'>
</span><span class='line'>&lt;/body>
</span><span class='line'>&lt;/html></span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var username = document.getElementById('username);
</span><span class='line'>var password = document.getElementById('password');
</span><span class='line'>
</span><span class='line'>if(localStorage.getItem('username') && localStorgage.getItem('password'))
</span><span class='line'>{
</span><span class='line'>  username.value = localStorage.getItem('username');
</span><span class='line'>  password.value = localStorage.getItem('password');
</span><span class='line'>  save.checked = true;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>save.onclick = function()
</span><span class='line'>{
</span><span class='line'>  if(save.checked)
</span><span class='line'>  {
</span><span class='line'>      localStorage.setItem('username',username.value);
</span><span class='line'>      //localhost.username = username.value;
</span><span class='line'>      localStorage.setItem('password',password.value);
</span><span class='line'>      //localStorage.password = password.value;
</span><span class='line'>  }else
</span><span class='line'>  {
</span><span class='line'>      localStorage.removeItem('username');
</span><span class='line'>      localstorage.removeItem('password');
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php之缓冲区]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/23/php005/"/>
    <updated>2015-07-23T13:24:24+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/23/php005</id>
    <content type="html"><![CDATA[<p><strong>ob_flush 与 flush 区别</strong></p>

<pre><code>ob_flush:是把数据从php的缓冲中释放出来
flush:是把不在缓冲中的或者说是被释放出来的数据发送到浏览器
所以当缓冲存在的时候，我们必须ob_flush和flush同时使用.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[html5之消息提醒]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/22/html5001/"/>
    <updated>2015-07-22T17:28:55+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/22/html5001</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE html>
</span><span class='line'>&lt;html>
</span><span class='line'>&lt;head>
</span><span class='line'>  &lt;meta charset="utf-8">
</span><span class='line'>  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge">
</span><span class='line'>  &lt;title>本地提醒&lt;/title>
</span><span class='line'>  &lt;script type="text/javascript" src="main.js">&lt;/script> 
</span><span class='line'>&lt;/head>
</span><span class='line'>&lt;body>
</span><span class='line'>  &lt;button onclick="NotificationHandler.showNotification()">show notification&lt;/button> 
</span><span class='line'>&lt;/body>
</span><span class='line'>&lt;/html></span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var NotificationHandler = {
</span><span class='line'>  isNotificationSupported: 'Notification' in window,
</span><span class='line'>  isPermissionGranted: function() {
</span><span class='line'>      return Notification.permission === 'granted';
</span><span class='line'>  },
</span><span class='line'>  requestPermission: function() {
</span><span class='line'>      if (!this.isNotificationSupported) {
</span><span class='line'>          console.log('the current browser does not support Notification API');
</span><span class='line'>          return;
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      Notification.requestPermission(function(status) {
</span><span class='line'>          //status是授权状态，如果用户允许显示桌面通知，则status为'granted'
</span><span class='line'>          console.log('status: ' + status);
</span><span class='line'>
</span><span class='line'>          //permission只读属性
</span><span class='line'>          var permission = Notification.permission;
</span><span class='line'>          //default 用户没有接收或拒绝授权 不能显示通知
</span><span class='line'>          //granted 用户接受授权 允许显示通知
</span><span class='line'>          //denied  用户拒绝授权 不允许显示通知
</span><span class='line'>
</span><span class='line'>          console.log('permission: ' + permission);
</span><span class='line'>      });
</span><span class='line'>  },
</span><span class='line'>  showNotification: function() {
</span><span class='line'>      if (!this.isNotificationSupported) {
</span><span class='line'>          console.log('the current browser does not support Notification API');
</span><span class='line'>          return;
</span><span class='line'>      }
</span><span class='line'>      if (!this.isPermissionGranted()) {
</span><span class='line'>          console.log('the current page has not been granted for notification');
</span><span class='line'>          return;
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      var n = new Notification("sir, you got a message", {
</span><span class='line'>          icon: 'img/icon.png',
</span><span class='line'>          body: 'you will have a meeting 5 minutes later.'
</span><span class='line'>      });
</span><span class='line'>
</span><span class='line'>      //onshow函数在消息框显示时会被调用
</span><span class='line'>      //可以做一些数据记录及定时操作等
</span><span class='line'>      n.onshow = function() {
</span><span class='line'>          console.log('notification shows up');
</span><span class='line'>          //5秒后关闭消息框
</span><span class='line'>          setTimeout(function() {
</span><span class='line'>              n.close();
</span><span class='line'>          }, 5000);
</span><span class='line'>      };
</span><span class='line'>
</span><span class='line'>      //消息框被点击时被调用
</span><span class='line'>      //可以打开相关的视图，同时关闭该消息框等操作
</span><span class='line'>      n.onclick = function() {
</span><span class='line'>          alert('open the associated view');
</span><span class='line'>          //opening the view...
</span><span class='line'>          n.close();
</span><span class='line'>      };
</span><span class='line'>
</span><span class='line'>      //当有错误发生时会onerror函数会被调用
</span><span class='line'>      //如果没有granted授权，创建Notification对象实例时，也会执行onerror函数
</span><span class='line'>      n.onerror = function() {
</span><span class='line'>          console.log('notification encounters an error');
</span><span class='line'>          //do something useful
</span><span class='line'>      };
</span><span class='line'>
</span><span class='line'>      //一个消息框关闭时onclose函数会被调用
</span><span class='line'>      n.onclose = function() {
</span><span class='line'>          console.log('notification is closed');
</span><span class='line'>          //do something useful
</span><span class='line'>      };
</span><span class='line'>  }
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>document.addEventListener('load', function() {
</span><span class='line'>  //try to request permission when page has been loaded.
</span><span class='line'>  NotificationHandler.requestPermission();
</span><span class='line'>});
</span><span class='line'>
</span><span class='line'>setTimeout(function() {  
</span><span class='line'>    //if there has new mail, show notification  
</span><span class='line'>    NotificationHandler.showNotification();  
</span><span class='line'>}, 5000);</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用H5上传图片]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/21/html5/"/>
    <updated>2015-07-21T16:48:42+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/21/html5</id>
    <content type="html"><![CDATA[<p><strong>主要用到的知识点</strong>
    fileAPI  FormData</p>

<figure class='code'><figcaption><span>html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE html>
</span><span class='line'>&lt;html lang="en">
</span><span class='line'>&lt;head>
</span><span class='line'>  &lt;meta charset="UTF-8">
</span><span class='line'>  &lt;title>图片上传&lt;/title>
</span><span class='line'>  &lt;script type="text/javascript" src='jquery-1.7.2.min.js'>&lt;/script>
</span><span class='line'>&lt;/head>
</span><span class='line'>&lt;body>
</span><span class='line'>  &lt;form id='form1'>
</span><span class='line'>      用户名：&lt;input type='text' name='username' />&lt;/br>
</span><span class='line'>      用户头像：&lt;input type='file' name='pic' id='pic' onchange='send();'>&lt;/br>
</span><span class='line'>      &lt;input type='button' id='but1' value='提交'>
</span><span class='line'>  &lt;/form>
</span><span class='line'>  &lt;div>
</span><span class='line'>      &lt;img id='imgs' widht='50' height='50' />
</span><span class='line'>  &lt;/div>
</span><span class='line'>&lt;/body>
</span><span class='line'>&lt;script type="text/javascript">
</span><span class='line'>function send()
</span><span class='line'>{
</span><span class='line'>   var pic = document.getElementById('pic');
</span><span class='line'>
</span><span class='line'>   if (window.navigator.userAgent.indexOf("Chrome") >= 1 || window.navigator.userAgent.indexOf("Safari") >= 1) 
</span><span class='line'>   {
</span><span class='line'>      var src = window.webkitURL.createObjectURL(pic.files[0]);
</span><span class='line'>   }
</span><span class='line'>   else 
</span><span class='line'>   {
</span><span class='line'>      var src = window.URL.createObjectURL(pic.files[0]);
</span><span class='line'>   }
</span><span class='line'>   $("#imgs").attr({src: src});
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>$("#but1").click(function(){
</span><span class='line'>  var fd = new FormData($('#form1'));
</span><span class='line'>  $.ajax({ 
</span><span class='line'>            url: 'from.php',  
</span><span class='line'>            type: 'POST',  
</span><span class='line'>            data: fd,  
</span><span class='line'>            dataType: 'JSON',
</span><span class='line'>            cache: false,  
</span><span class='line'>            processData: false,  
</span><span class='line'>            contentType: false  
</span><span class='line'>        }).done(function(ret){  
</span><span class='line'>          console.log(ret);
</span><span class='line'>    }); 
</span><span class='line'>});
</span><span class='line'>&lt;/script>
</span><span class='line'>&lt;/html></span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//获取图片进行处理
</span><span class='line'>print_r($_FILES);
</span><span class='line'>//获取其他数据进行处理
</span><span class='line'>print_r($_POST);</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux下如何编译安装软件]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/20/linux003/"/>
    <updated>2015-07-20T13:10:47+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/20/linux003</id>
    <content type="html"><![CDATA[<h3>基本步骤</h3>

<pre><code>1 ./configure 检查gcc编译器、依赖函数库或软件是否已经安装
2 当configure 检查通过后，生成makefile文件
3 make根据makefile生成可执行文件（二进制文件）
4 make install 到/etc /lib /usr/lib /usr/share /var/lib
</code></pre>

<h3>注意</h3>

<pre><code>/etc 一般放置配置文件
/lib /usr/lib 一般放置函数库 
/var/lib  一般放置数据库
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP无限极分类]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/14/php006/"/>
    <updated>2015-07-14T13:59:46+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/14/php006</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$arr = array(
</span><span class='line'> array('id' => 1,'name' => 'php', 'pid' => 0,'path' => 0),
</span><span class='line'> array('id' => 2,'name' => 'java', 'pid' => 0,'path' => 0),
</span><span class='line'> array('id' => 3,'name' => 'php_1', 'pid' => 1,'path' => '0-1'),
</span><span class='line'> array('id' => 4,'name' => 'js', 'pid' => 0,'path' => '0-2'),
</span><span class='line'> array('id' => 5,'name' => 'php_1_1','pid' => 0,'path' => '0-1-3'),
</span><span class='line'> array('id' => 6,'name' => 'linux', 'pid' => 0,'path' => '0')
</span><span class='line'>);</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>foreach ($arr as &$value)
</span><span class='line'>{
</span><span class='line'> $num = substr_count($value['path'], '-');
</span><span class='line'> if($num > 0)
</span><span class='line'> {
</span><span class='line'>  $pre = '|'.str_repeat('-', $num);
</span><span class='line'> }else
</span><span class='line'> {
</span><span class='line'>  $pre = '';
</span><span class='line'> }
</span><span class='line'> $value['tree'] = $pre.$value['name'];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>foreach ($arr as $row)
</span><span class='line'>{
</span><span class='line'> $rows[] = $row['path'].'-'.$row['id'];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>array_multisort($rows,$arr);
</span><span class='line'>echo '&lt;pre>';
</span><span class='line'>print_r($arr);</span></code></pre></td></tr></table></div></figure>


<p><strong>如果是在mysql中可以先排序</strong></p>

<pre><code>group by cancat(path.'-'.id)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP判断远程文件是否存在的几种方法]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/14/php005/"/>
    <updated>2015-07-14T13:59:46+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/14/php005</id>
    <content type="html"><![CDATA[<p><strong>在做一个图片预览的东西,遇到一个问题,就是判断远程文件是否存在</strong></p>

<figure class='code'><figcaption><span>curl判断文件 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function file_exists($url)
</span><span class='line'>{
</span><span class='line'>  $ch = curl_init();
</span><span class='line'>  curl_setopt($ch,curlopt_url,$url);
</span><span class='line'>  curl_setopt($ch,curlopt_nobody,1);
</span><span class='line'>  curl_setopt($ch,curlopt_failonerror,1);
</span><span class='line'>  curl_setopt($ch,curlopt_returntransfer,1);
</span><span class='line'>  
</span><span class='line'>  if(curl_exec($ch)!==false)
</span><span class='line'>  return true;
</span><span class='line'>  else
</span><span class='line'>  return false
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>file_get_contents判断文件 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function file_exists2($url)
</span><span class='line'>{
</span><span class='line'>  if(file_get_contents($url,0,null,0,1))
</span><span class='line'>  return 1;
</span><span class='line'>  else
</span><span class='line'>  return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>get_headers判断文件 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function file_exists3($url)
</span><span class='line'>{
</span><span class='line'>  return get_headers($url)
</span><span class='line'>}
</span><span class='line'>注意：返回值array</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sublime配置全攻略]]></title>
    <link href="http://ztlblog.github.io/blog/2015/07/14/other002/"/>
    <updated>2015-07-14T13:59:46+08:00</updated>
    <id>http://ztlblog.github.io/blog/2015/07/14/other002</id>
    <content type="html"><![CDATA[<h3>一.常用插件</h3>

<p><strong>1.package control</strong>。我们用sublime几乎都会首先安装这个插件，再安装其他插件就方便了。安装方法：</p>

<pre><code>点击sublime的菜单栏 view-&gt;show console;现在打开了控制台

import urllib2,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();os.makedirs(ipp) if not os.path.exists(ipp) else None;open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())
</code></pre>

<p>然后我们按住 ctrl+shift+p。此时会输出一个输入框，输入install。选择package contrl:install package 回车，需要稍等一会，右下角状态栏会显示正在连接的提示文字。 使用sublime时注意看右下角状态栏，很多插件的提示信息都显示在这里，这个状态栏很小，初次使用的人都有可能没有注意到它。</p>

<p>如果要卸载插件， ctrl+shift+p 输入 remove， 选择package control:remove package 然后再选择已安装的插件， 回车即可卸载。</p>

<p>如果package control 安装插件时失败了， 我们可以采用手动安装的方式， 在google上去搜索插件， 下载插件的源代码。在sublime的菜单栏点击 preferences->Browse package..  此时会打开插件目录。然后把你下载的插件源代码复制进去就可以了。</p>

<p>ctrl+shift+p 打开的输入框面板是什么？任何操作都可以在这个面板里面完成。 打开万能面板有几种方式：</p>

<p>ctrl+shift+p 打开时，我们需要在面板中输入一个命令，然后执行命令。所有菜单栏能操作事都可以在这里输入命令进行操作。</p>

<p>ctrl+p 打开时，能快速查找文件。</p>

<p>ctrl+r 打开时， 能查找当前文件中的函数。</p>

<p>ctrl+g 打开时，能跳转到指定行。</p>

<p><strong>2.ctags。</strong> 这个cake能跨文件跳转，跳转到指定函数声明的地方。使用 <strong>package control</strong>搜索<strong>ctags</strong>进行安装。注意安装好插件后需要安装ctags命令。window下载(ctags.ext <a href="http://pan.baidu.com/s/1sjDmnLV">http://pan.baidu.com/s/1sjDmnLV</a>)。将ctags.ext文件放在一个环境变量能访问到的地方。打开cmd，输入ctags,如果有这个命令，证明成功了。</p>

<p><strong>3.sublimecodeintel代码提示。</strong> sublime默认的代码提示只能提示系统函数，用户自己创建的函数、类不能提示。如果想要提示自己简历的函数。可以安装sublimecondeintel插件</p>

<p>sublimecodeintel安装后需要安配置文件：插件目录./codeintel/config中增加</p>

<pre><code>"php":{
    "php": 'D:\SaeServer\php\php.ext',
    "phpExtraPaths": ['D:\SaeServer\php\stdlib'],
    "phpConfigFile": 'D:\SaeServer\apache\php.ini'
},
</code></pre>

<p><strong>4.语法提示。</strong>我们需要在写代码的时候如果有语法错误，能立即提示我们， 可以安装这两个插件：sublimelint 和Phpcs ， sublimeint 需要系统有php命令。 所以需要设置好php的环境变量。 sublimelint的语法错误提示是显示在状态栏上面的，所以在编写程序的时候注意时常看看状态栏。 而Phpcs的语法错误提示是在我们保存文件时弹出万能面板显示错误，sublimelint的错误提示实时但不明显。 Phpcs的错误提示不是实时的，但很明显。 因此我们一般这两个插件都要安装。  Phpcs除了代码提示的共，还有其他功能，但是我暂时没有弄明白其他功能怎么用， 大家可以去研究一下，如果知道怎么用了再告诉我一下。</p>

<p><strong>5.goto document.</strong>这个插件能帮助我们快速查看手册。比如我们在写php代码时，突然忘记了某个函数怎么用了，将鼠标房子这个函数上，然后按F1，他能快速打开PHP手册中的说明这个函数用法的地方。</p>

<p>安装好goto document插件后我们再配置快捷键F1跳转到文档。打开sublime的菜单栏Preferences->key bindings -User 设置快捷键：</p>

<pre><code>[
    {"keys":["f1"],"command": "goto_documentation"}
]
</code></pre>

<p><strong>6.SVN插件.</strong> windows下可以安装Tortoise和Tortoisesvn的客户端。然后在sublime中在目录或文件右键都可以提交svn了。</p>
]]></content>
  </entry>
  
</feed>
